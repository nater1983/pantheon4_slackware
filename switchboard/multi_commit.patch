From baedd88b49ae24a4f7243f9195c86f47429e155e Mon Sep 17 00:00:00 2001
From: Ryo Nakano <26003928+ryonakano@users.noreply.github.com>
Date: Tue, 1 Nov 2022 04:17:59 +0900
Subject: [PATCH] Plug: Remove unused category other (#252)

---
 lib/Plug.vala | 3 +--
 1 file changed, 1 insertion(+), 2 deletions(-)

diff --git a/lib/Plug.vala b/lib/Plug.vala
index dcb73049..f1a51e7a 100644
--- a/lib/Plug.vala
+++ b/lib/Plug.vala
@@ -23,8 +23,7 @@ public abstract class Switchboard.Plug : GLib.Object {
         PERSONAL = 0,
         HARDWARE = 1,
         NETWORK = 2,
-        SYSTEM = 3,
-        OTHER = 4
+        SYSTEM = 3
     }
 
     /**
From d1f1a1b648741086d9efe0808773915560a209bd Mon Sep 17 00:00:00 2001
From: lenemter <lenemter@gmail.com>
Date: Mon, 26 Sep 2022 00:08:54 +0900
Subject: [PATCH] Omit plug_selected signal (#248)

---
 src/Application.vala  | 1 -
 src/CategoryView.vala | 2 --
 2 files changed, 3 deletions(-)

diff --git a/src/Application.vala b/src/Application.vala
index cbf66a36..7999528d 100644
--- a/src/Application.vala
+++ b/src/Application.vala
@@ -157,7 +157,6 @@ namespace Switchboard {
             headerbar.pack_end (search_box);
 
             category_view = new Switchboard.CategoryView (plug_to_open);
-            category_view.plug_selected.connect ((plug) => load_plug (plug));
             category_view.load_default_plugs.begin ();
 
             deck = new Hdy.Deck () {
diff --git a/src/CategoryView.vala b/src/CategoryView.vala
index 5d170854..6b2a4776 100644
--- a/src/CategoryView.vala
+++ b/src/CategoryView.vala
@@ -22,8 +22,6 @@
 namespace Switchboard {
 
     public class CategoryView : Gtk.Stack {
-        public signal void plug_selected (Switchboard.Plug plug);
-
         public PlugsSearch plug_search { get; construct; }
         public Gee.ArrayList<SearchEntry?> plug_search_result { get; construct; }
         public Switchboard.Category personal_category { get; construct; }
From cfec3cda763c5603f800b15d76de601fbe2ee446 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Danielle=20For=C3=A9?= <daniel@elementary.io>
Date: Tue, 14 Jun 2022 11:18:40 -0700
Subject: [PATCH] Application: center searchbox in categoryview (#239)

---
 src/Application.vala | 30 +++++++++++++++++++++++++-----
 1 file changed, 25 insertions(+), 5 deletions(-)

diff --git a/src/Application.vala b/src/Application.vala
index 7999528d..ac2ba8bc 100644
--- a/src/Application.vala
+++ b/src/Application.vala
@@ -37,6 +37,8 @@ namespace Switchboard {
         private Hdy.HeaderBar headerbar;
         private Hdy.Window main_window;
         private Switchboard.CategoryView category_view;
+        private Gtk.Label title_label;
+        private Gtk.Stack title_stack;
 
         private static bool opened_directly = false;
         private static string? link = null;
@@ -148,13 +150,27 @@ namespace Switchboard {
                 sensitive = false
             };
 
+            title_label = new Gtk.Label ("");
+            title_label.get_style_context ().add_class ("title");
+
+            title_stack = new Gtk.Stack () {
+                hexpand = true
+            };
+            title_stack.add (search_box);
+            title_stack.add (title_label);
+
+            var title_clamp = new Hdy.Clamp () {
+                child = title_stack,
+                maximum_size = 800
+            };
+
             headerbar = new Hdy.HeaderBar () {
-                has_subtitle = false,
+                centering_policy = STRICT,
+                height_request = 38,
                 show_close_button = true,
-                title = _("System Settings")
+                custom_title = title_clamp
             };
             headerbar.pack_start (navigation_button);
-            headerbar.pack_end (search_box);
 
             category_view = new Switchboard.CategoryView (plug_to_open);
             category_view.load_default_plugs.begin ();
@@ -206,6 +222,8 @@ namespace Switchboard {
 
             add_window (main_window);
 
+            main_window.bind_property ("title", title_label, "label");
+
             search_box.search_changed.connect (() => {
                 if (search_box.text_length > 0) {
                     search_stack.visible_child = searchview;
@@ -328,7 +346,8 @@ namespace Switchboard {
                 }
 
                 if (deck.visible_child == category_view) {
-                    headerbar.title = _("System Settings");
+                    main_window.title = _("System Settings");
+                    title_stack.visible_child = search_box;
 
                     navigation_button.hide ();
 
@@ -336,7 +355,8 @@ namespace Switchboard {
                     search_box.has_focus = search_box.sensitive;
                 } else {
                     plug_widgets[deck.visible_child].shown ();
-                    headerbar.title = plug_widgets[deck.visible_child].display_name;
+                    main_window.title = plug_widgets[deck.visible_child].display_name;
+                    title_stack.visible_child = title_label;
 
                     if (previous_child != null && previous_child is Switchboard.Plug) {
                         navigation_button.label = previous_child.display_name;
From 4addc644b8ff739ece875e6e92a309c58a959ddb Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Danielle=20For=C3=A9?= <daniel@elementary.io>
Date: Tue, 5 Jul 2022 11:16:36 -0700
Subject: [PATCH] Responsive (#233)

---
 src/Application.vala             | 12 +++++-----
 src/CategoryView.vala            | 39 +++++++++++++++++++++-----------
 src/Widgets/CategoryFlowBox.vala | 30 ++++++++----------------
 src/Widgets/CategoryIcon.vala    | 39 ++++++++++++++++++++------------
 4 files changed, 66 insertions(+), 54 deletions(-)

diff --git a/src/Application.vala b/src/Application.vala
index ac2ba8bc..fbc8bb42 100644
--- a/src/Application.vala
+++ b/src/Application.vala
@@ -192,12 +192,12 @@ namespace Switchboard {
             grid.attach (headerbar, 0, 0);
             grid.attach (search_stack, 0, 1);
 
-            main_window = new Hdy.Window ();
-            main_window.application = this;
-            main_window.icon_name = application_id;
-            main_window.title = _("System Settings");
-            main_window.add (grid);
-            main_window.set_size_request (640, 480);
+            main_window = new Hdy.Window () {
+                application = this,
+                child = grid,
+                icon_name = application_id,
+                title = _("System Settings")
+            };
 
             int window_x, window_y;
             var rect = Gtk.Allocation ();
diff --git a/src/CategoryView.vala b/src/CategoryView.vala
index 6b2a4776..3c5c3d2f 100644
--- a/src/CategoryView.vala
+++ b/src/CategoryView.vala
@@ -21,7 +21,7 @@
 
 namespace Switchboard {
 
-    public class CategoryView : Gtk.Stack {
+    public class CategoryView : Gtk.Box {
         public PlugsSearch plug_search { get; construct; }
         public Gee.ArrayList<SearchEntry?> plug_search_result { get; construct; }
         public Switchboard.Category personal_category { get; construct; }
@@ -31,6 +31,7 @@ namespace Switchboard {
 
         public string? plug_to_open { get; construct set; default = null; }
 
+        private Gtk.Stack stack;
         private Granite.Widgets.AlertView alert_view;
 
         construct {
@@ -45,21 +46,33 @@ namespace Switchboard {
             plug_search = new PlugsSearch ();
             plug_search_result = new Gee.ArrayList<SearchEntry?> ();
 
-            var category_grid = new Gtk.Grid ();
-            category_grid.margin_top = 12;
-            category_grid.orientation = Gtk.Orientation.VERTICAL;
-            category_grid.add (personal_category);
-            category_grid.add (hardware_category);
-            category_grid.add (network_category);
-            category_grid.add (system_category);
+            var category_box = new Gtk.Box (Gtk.Orientation.VERTICAL, 24) {
+                margin_top = 12,
+                margin_end = 12,
+                margin_bottom = 12,
+                margin_start = 12
+            };
+            category_box.add (personal_category);
+            category_box.add (hardware_category);
+            category_box.add (network_category);
+            category_box.add (system_category);
 
             var category_scrolled = new Gtk.ScrolledWindow (null, null) {
+                child = category_box,
                 hscrollbar_policy = Gtk.PolicyType.NEVER
             };
-            category_scrolled.add (category_grid);
 
-            add (alert_view);
-            add_named (category_scrolled, "category-grid");
+            stack = new Gtk.Stack ();
+            stack.add (alert_view);
+            stack.add_named (category_scrolled, "category-grid");
+
+            var clamp = new Hdy.Clamp () {
+                child = stack,
+                maximum_size = 800,
+                tightening_threshold = 800
+            };
+
+            add (clamp);
         }
 
         public CategoryView (string? plug = null) {
@@ -72,7 +85,7 @@ namespace Switchboard {
             alert_view.description = secondary_text;
             alert_view.icon_name = icon_name;
 
-            visible_child = alert_view;
+            stack.visible_child = alert_view;
         }
 
         public async void load_default_plugs () {
@@ -129,7 +142,7 @@ namespace Switchboard {
             }
 
             if (any_found) {
-                visible_child_name = "category-grid";
+                stack.visible_child_name = "category-grid";
             }
 
             if (plug_to_open != null && plug_to_open.has_suffix (plug.code_name)) {
diff --git a/src/Widgets/CategoryFlowBox.vala b/src/Widgets/CategoryFlowBox.vala
index 12bdcabe..b255ab7e 100644
--- a/src/Widgets/CategoryFlowBox.vala
+++ b/src/Widgets/CategoryFlowBox.vala
@@ -30,33 +30,21 @@ namespace Switchboard {
 
         construct {
             var category_label = new Granite.HeaderLabel (Switchboard.CategoryView.get_category_name (category));
-            category_label.vexpand = true;
 
-            var h_separator = new Gtk.Separator (Gtk.Orientation.HORIZONTAL);
-            h_separator.hexpand = true;
-            h_separator.valign = Gtk.Align.CENTER;
-
-            flowbox = new Gtk.FlowBox ();
-            flowbox.activate_on_single_click = true;
-            flowbox.column_spacing = 12;
-            flowbox.row_spacing = 12;
-            flowbox.homogeneous = true;
-            flowbox.min_children_per_line = 5;
-            flowbox.max_children_per_line = 5;
-            flowbox.selection_mode = Gtk.SelectionMode.NONE;
-            flowbox.vexpand = true;
-
-            margin_bottom = 12;
-            margin_start = 12;
-            margin_end = 12;
+            flowbox = new Gtk.FlowBox () {
+                activate_on_single_click = true,
+                column_spacing = 12,
+                row_spacing = 12,
+                homogeneous = true,
+                max_children_per_line = 5,
+                selection_mode = Gtk.SelectionMode.NONE
+            };
 
+            valign = Gtk.Align.START;
             column_spacing = 3;
             row_spacing = 6;
 
-            vexpand = true;
-
             attach (category_label, 0, 0, 1, 1);
-            attach (h_separator, 1, 0, 1, 1);
             attach (flowbox, 0, 1, 2, 1);
 
             flowbox.child_activated.connect ((child) => {
diff --git a/src/Widgets/CategoryIcon.vala b/src/Widgets/CategoryIcon.vala
index a74f7ae1..64756f3d 100644
--- a/src/Widgets/CategoryIcon.vala
+++ b/src/Widgets/CategoryIcon.vala
@@ -19,30 +19,41 @@
 */
 public class Switchboard.CategoryIcon : Gtk.FlowBoxChild {
     public unowned Switchboard.Plug plug { get; construct; }
+    private static Gtk.SizeGroup size_group;
 
     public CategoryIcon (Switchboard.Plug plug) {
         Object (plug: plug);
     }
-    construct {
-        width_request = 144;
 
-        var icon = new Gtk.Image.from_icon_name (plug.icon, Gtk.IconSize.DND);
-        icon.tooltip_text = plug.description;
+    static construct {
+        size_group = new Gtk.SizeGroup (Gtk.SizeGroupMode.HORIZONTAL);
+    }
 
-        var plug_name = new Gtk.Label (plug.display_name);
-        plug_name.justify = Gtk.Justification.CENTER;
-        plug_name.max_width_chars = 18;
-        plug_name.wrap = true;
-        plug_name.wrap_mode = Pango.WrapMode.WORD_CHAR;
+    construct {
+        var icon = new Gtk.Image.from_icon_name (plug.icon, Gtk.IconSize.DND) {
+            pixel_size = 32,
+            tooltip_text = plug.description
+        };
 
-        var layout = new Gtk.Grid ();
-        layout.halign = Gtk.Align.CENTER;
-        layout.margin = 6;
-        layout.orientation = Gtk.Orientation.VERTICAL;
+        var plug_name = new Gtk.Label (plug.display_name) {
+            hexpand = true,
+            wrap = true,
+            wrap_mode = Pango.WrapMode.WORD_CHAR,
+            xalign = 0
+        };
+
+        var layout = new Gtk.Box (Gtk.Orientation.HORIZONTAL, 6) {
+            margin_top = 6,
+            margin_end = 6,
+            margin_bottom = 6,
+            margin_start = 6
+        };
         layout.add (icon);
         layout.add (plug_name);
 
-        add (layout);
+        size_group.add_widget (layout);
+
+        child = layout;
 
         plug.visibility_changed.connect (() => {
             changed ();
From eb8fd718d63ad3745ee3a98333fc7c49bd86acd9 Mon Sep 17 00:00:00 2001
From: Leo <lenemter@gmail.com>
Date: Thu, 15 Jun 2023 16:23:43 +0900
Subject: [PATCH] Clamp category box, not scrolled window (#264)

---
 src/CategoryView.vala | 16 ++++++++--------
 1 file changed, 8 insertions(+), 8 deletions(-)

diff --git a/src/CategoryView.vala b/src/CategoryView.vala
index 3c5c3d2f..b574265d 100644
--- a/src/CategoryView.vala
+++ b/src/CategoryView.vala
@@ -57,8 +57,14 @@ namespace Switchboard {
             category_box.add (network_category);
             category_box.add (system_category);
 
-            var category_scrolled = new Gtk.ScrolledWindow (null, null) {
+            var clamp = new Hdy.Clamp () {
                 child = category_box,
+                maximum_size = 800,
+                tightening_threshold = 800
+            };
+
+            var category_scrolled = new Gtk.ScrolledWindow (null, null) {
+                child = clamp,
                 hscrollbar_policy = Gtk.PolicyType.NEVER
             };
 
@@ -66,13 +72,7 @@ namespace Switchboard {
             stack.add (alert_view);
             stack.add_named (category_scrolled, "category-grid");
 
-            var clamp = new Hdy.Clamp () {
-                child = stack,
-                maximum_size = 800,
-                tightening_threshold = 800
-            };
-
-            add (clamp);
+            add (stack);
         }
 
         public CategoryView (string? plug = null) {
From b41034ddb48a4e957f00e4430e7e2426c61ef2a6 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Danielle=20For=C3=A9?= <danielle@elementary.io>
Date: Tue, 14 Jun 2022 10:09:40 -0700
Subject: [PATCH] =?UTF-8?q?master=20=E2=86=92=20main?=
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

---
 data/io.elementary.switchboard.appdata.xml.in | 2 +-
 3 files changed, 4 insertions(+), 4 deletions(-)

diff --git a/data/io.elementary.switchboard.appdata.xml.in b/data/io.elementary.switchboard.appdata.xml.in
index b73b5ab6..d9d4cae3 100644
--- a/data/io.elementary.switchboard.appdata.xml.in
+++ b/data/io.elementary.switchboard.appdata.xml.in
@@ -15,7 +15,7 @@
 
   <screenshots>
     <screenshot type="default">
-      <image>https://raw.githubusercontent.com/elementary/switchboard/master/data/screenshot.png</image>
+      <image>https://raw.githubusercontent.com/elementary/switchboard/main/data/screenshot.png</image>
     </screenshot>
   </screenshots>
 
From d0dcfda71afd9fcc3da766a497e6352e645f3345 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Danielle=20For=C3=A9?= <daniel@elementary.io>
Date: Tue, 14 Jun 2022 10:10:29 -0700
Subject: [PATCH] Port to Gtk4 (#231)

---
 .github/workflows/main.yml                 |   2 +-
 README.md                                  |   6 +-
 data/io.elementary.switchboard.gschema.xml |  16 +-
 lib/switchboard-2.0.deps                   |   2 +-
 meson.build                                |   9 +-
 src/Application.vala                       | 236 +++++++--------------
 src/CategoryView.vala                      |  37 ++--
 src/SearchView.vala                        |  44 ++--
 src/Widgets/CategoryFlowBox.vala           |  21 +-
 src/Widgets/CategoryIcon.vala              |  22 +-
 src/meson.build                            |   2 +-
 11 files changed, 156 insertions(+), 241 deletions(-)

diff --git a/README.md b/README.md
index ed5eb993..e85a54b7 100644
--- a/README.md
+++ b/README.md
@@ -16,9 +16,9 @@ You'll need the following dependencies:
 
 * libgee-0.8-dev
 * libglib2.0-dev
-* libgranite-dev >= 5.4.0
-* libgtk-3-dev
-* libhandy-1-dev >= 0.83.0
+* libgranite-7-dev
+* libgtk-4-dev
+* libadwaita-1-dev
 * meson
 * valac
 
diff --git a/data/io.elementary.switchboard.gschema.xml b/data/io.elementary.switchboard.gschema.xml
index 3364a42b..c094472f 100644
--- a/data/io.elementary.switchboard.gschema.xml
+++ b/data/io.elementary.switchboard.gschema.xml
@@ -6,15 +6,15 @@
       <summary>Whether the window was maximized on last run</summary>
       <description>Whether the window was maximized on last run</description>
     </key>
-    <key name="window-position" type="(ii)">
-      <default>(-1, -1)</default>
-      <summary>Window position</summary>
-      <description>Most recent window position (x, y)</description>
+    <key name="window-height" type="i">
+      <default>720</default>
+      <summary>Most recent window height</summary>
+      <description>Most recent window height</description>
     </key>
-    <key name="window-size" type="(ii)">
-      <default>(1024, 720)</default>
-      <summary>Most recent window size</summary>
-      <description>Most recent window size (width, height)</description>
+    <key name="window-width" type="i">
+      <default>1024</default>
+      <summary>Most recent window width</summary>
+      <description>Most recent window width</description>
     </key>
 	</schema>
 	<schema path="/io/elementary/switchboard/preferences/" id="io.elementary.switchboard.preferences">
diff --git a/lib/switchboard-2.0.deps b/lib/switchboard-2.0.deps
index b5efc3bd..8efc3dd4 100644
--- a/lib/switchboard-2.0.deps
+++ b/lib/switchboard-2.0.deps
@@ -2,5 +2,5 @@ glib-2.0
 gio-2.0
 gee-0.8
 gmodule-2.0
-gtk+-3.0
+gtk4
 gio-unix-2.0
diff --git a/meson.build b/meson.build
index f057add7..7b829556 100644
--- a/meson.build
+++ b/meson.build
@@ -8,8 +8,7 @@ lib_version = '2.0'
 
 add_project_arguments([
         '-DGETTEXT_PACKAGE="@0@"'.format(meson.project_name()),
-        '-DG_LOG_DOMAIN="switchboard"',
-        '-DHANDY_USE_UNSTABLE_API',
+        '-DG_LOG_DOMAIN="switchboard"'
     ],
     language: 'c'
 )
@@ -32,10 +31,10 @@ glib_dep = dependency('glib-2.0', version: '>=2.32')
 gio_dep = dependency('gio-2.0')
 gio_unix_dep = dependency('gio-unix-2.0')
 gmodule_dep = dependency('gmodule-2.0')
-gtk_dep = dependency('gtk+-3.0', version: '>=3.10')
+gtk_dep = dependency('gtk4', version: '>=3.10')
 gee_dep = dependency('gee-0.8')
-granite_dep = dependency('granite', version: '>=5.4.0')
-handy_dep = dependency('libhandy-1', version: '>=0.83.0')
+granite_dep = dependency('granite-7', version: '>=7.0.0')
+adwaita_dep = dependency('libadwaita-1')
 m_dep = meson.get_compiler('c').find_library('m', required : false)
 
 subdir('data')
diff --git a/src/Application.vala b/src/Application.vala
index fbc8bb42..54b32649 100644
--- a/src/Application.vala
+++ b/src/Application.vala
@@ -20,25 +20,18 @@
 */
 
 namespace Switchboard {
-    public static int main (string[] args) {
-        var app = new SwitchboardApp ();
-        return app.run (args);
-    }
-
     public class SwitchboardApp : Gtk.Application {
         public Gtk.SearchEntry search_box { get; private set; }
 
         private string all_settings_label = N_("All Settings");
-        private uint configure_id;
 
         private GLib.HashTable <Gtk.Widget, Switchboard.Plug> plug_widgets;
         private Gtk.Button navigation_button;
-        private Hdy.Deck deck;
-        private Hdy.HeaderBar headerbar;
-        private Hdy.Window main_window;
+        private Adw.Leaflet leaflet;
+        private Gtk.HeaderBar headerbar;
+        private Gtk.Window main_window;
         private Switchboard.CategoryView category_view;
         private Gtk.Label title_label;
-        private Gtk.Stack title_stack;
 
         private static bool opened_directly = false;
         private static string? link = null;
@@ -83,8 +76,6 @@ namespace Switchboard {
         }
 
         public override void activate () {
-            Hdy.init ();
-
             var plugsmanager = Switchboard.PlugsManager.get_default ();
             var setting = new Settings ("io.elementary.switchboard.preferences");
             var mapping_dic = setting.get_value ("mapping-override");
@@ -145,109 +136,91 @@ namespace Switchboard {
             );
             navigation_button.get_style_context ().add_class ("back-button");
 
+            var search_box_eventcontrollerkey = new Gtk.EventControllerKey ();
+
             search_box = new Gtk.SearchEntry () {
                 placeholder_text = _("Search Settings"),
                 sensitive = false
             };
+            search_box.add_controller (search_box_eventcontrollerkey);
 
-            title_label = new Gtk.Label ("");
-            title_label.get_style_context ().add_class ("title");
-
-            title_stack = new Gtk.Stack () {
-                hexpand = true
-            };
-            title_stack.add (search_box);
-            title_stack.add (title_label);
-
-            var title_clamp = new Hdy.Clamp () {
-                child = title_stack,
-                maximum_size = 800
-            };
-
-            headerbar = new Hdy.HeaderBar () {
-                centering_policy = STRICT,
-                height_request = 38,
-                show_close_button = true,
-                custom_title = title_clamp
+            headerbar = new Gtk.HeaderBar () {
+                show_title_buttons = true
             };
             headerbar.pack_start (navigation_button);
 
             category_view = new Switchboard.CategoryView (plug_to_open);
             category_view.load_default_plugs.begin ();
 
-            deck = new Hdy.Deck () {
-                can_swipe_back = true,
-                can_swipe_forward = true
+            leaflet = new Adw.Leaflet () {
+                can_navigate_back = true,
+                can_navigate_forward = true
             };
-            deck.add (category_view);
+            leaflet.append (category_view);
 
             var searchview = new SearchView ();
 
-            var search_stack = new Gtk.Stack ();
-            search_stack.transition_type = Gtk.StackTransitionType.OVER_DOWN_UP;
-            search_stack.add (deck);
-            search_stack.add (searchview);
+            var search_stack = new Gtk.Stack () {
+                transition_type = Gtk.StackTransitionType.OVER_DOWN_UP
+            };
+            search_stack.add_child (leaflet);
+            search_stack.add_child (searchview);
 
-            var grid = new Gtk.Grid ();
-            grid.attach (headerbar, 0, 0);
-            grid.attach (search_stack, 0, 1);
+            var window_eventcontrollerkey = new Gtk.EventControllerKey ();
 
-            main_window = new Hdy.Window () {
+            main_window = new Gtk.Window () {
                 application = this,
-                child = grid,
+                child = search_stack,
                 icon_name = application_id,
-                title = _("System Settings")
+                title = _("System Settings"),
+                titlebar = headerbar
             };
+            main_window.set_size_request (640, 480);
+            add_window (main_window);
+            main_window.present ();
 
-            int window_x, window_y;
-            var rect = Gtk.Allocation ();
-
-            var settings = new GLib.Settings ("io.elementary.switchboard.saved-state");
-            settings.get ("window-position", "(ii)", out window_x, out window_y);
-            settings.get ("window-size", "(ii)", out rect.width, out rect.height);
-
-            if (window_x != -1 || window_y != -1) {
-                main_window.move (window_x, window_y);
-            }
+            navigation_button.hide ();
 
-            main_window.set_allocation (rect);
+            /*
+            * This is very finicky. Bind size after present else set_titlebar gives us bad sizes
+            * Set maximize after height/width else window is min size on unmaximize
+            * Bind maximize as SET else get get bad sizes
+            */
+            var settings = new Settings ("io.elementary.music");
+            settings.bind ("window-height", main_window, "default-height", SettingsBindFlags.DEFAULT);
+            settings.bind ("window-width", main_window, "default-width", SettingsBindFlags.DEFAULT);
 
             if (settings.get_boolean ("window-maximized")) {
                 main_window.maximize ();
             }
 
-            main_window.show_all ();
-
-            navigation_button.hide ();
-
-            add_window (main_window);
+            settings.bind ("window-maximized", main_window, "maximized", SettingsBindFlags.SET);
 
             main_window.bind_property ("title", title_label, "label");
 
             search_box.search_changed.connect (() => {
-                if (search_box.text_length > 0) {
+                if (search_box.text.length > 0) {
                     search_stack.visible_child = searchview;
                 } else {
-                    search_stack.visible_child = deck;
+                    search_stack.visible_child = leaflet;
                 }
             });
 
-            search_box.key_press_event.connect ((event) => {
-                switch (event.keyval) {
-                    case Gdk.Key.Return:
-                        searchview.activate_first_item ();
-                        return Gdk.EVENT_STOP;
+            search_box.activate.connect (() => {
+                searchview.activate_first_item ();
+            });
+
+            search_box_eventcontrollerkey.key_released.connect ((keyval, keycode, state) => {
+                switch (keyval) {
                     case Gdk.Key.Down:
                         search_box.move_focus (Gtk.DirectionType.TAB_FORWARD);
-                        return Gdk.EVENT_STOP;
+                        break;
                     case Gdk.Key.Escape:
                         search_box.text = "";
-                        return Gdk.EVENT_STOP;
+                        break;
                     default:
                         break;
                 }
-
-                return Gdk.EVENT_PROPAGATE;
             });
 
             back_action.activate.connect (() => {
@@ -255,72 +228,26 @@ namespace Switchboard {
             });
 
             quit_action.activate.connect (() => {
-                main_window.destroy ();
-            });
-
-            main_window.button_release_event.connect ((event) => {
-                // On back mouse button pressed
-                if (event.button == 8) {
-                    navigation_button.clicked ();
-                }
-
-                return false;
+                quit ();
             });
 
-            main_window.destroy.connect (shut_down);
-
-            main_window.configure_event.connect ((event) => {
-                if (configure_id != 0) {
-                    GLib.Source.remove (configure_id);
+            shutdown.connect (() => {
+                if (plug_widgets[leaflet.visible_child] != null && plug_widgets[leaflet.visible_child] is Switchboard.Plug) {
+                    plug_widgets[leaflet.visible_child].hidden ();
                 }
-
-                configure_id = Timeout.add (100, () => {
-                    configure_id = 0;
-
-                    if (main_window.is_maximized) {
-                        settings.set_boolean ("window-maximized", true);
-                    } else {
-                        settings.set_boolean ("window-maximized", false);
-
-                        main_window.get_allocation (out rect);
-                        settings.set ("window-size", "(ii)", rect.width, rect.height);
-
-                        int root_x, root_y;
-                        main_window.get_position (out root_x, out root_y);
-                        settings.set ("window-position", "(ii)", root_x, root_y);
-                    }
-
-                    return false;
-                });
-
-                return false;
             });
 
-            main_window.key_press_event.connect ((event) => {
-                switch (event.keyval) {
-                    // arrow or tab key is being used by CategoryView to navigate
-                    case Gdk.Key.Up:
-                    case Gdk.Key.Down:
-                    case Gdk.Key.Left:
-                    case Gdk.Key.Right:
-                    case Gdk.Key.Return:
-                    case Gdk.Key.Tab:
-                        return Gdk.EVENT_PROPAGATE;
-                }
-
-                // Don't focus if it is a modifier or if search_box is already focused
-                if ((event.is_modifier == 0) && !search_box.has_focus) {
-                    search_box.grab_focus ();
-                }
-
+            ((Gtk.Widget) main_window).add_controller (window_eventcontrollerkey);
+            window_eventcontrollerkey.key_pressed.connect ((keyval, keycode, modifiers) => {
+                window_eventcontrollerkey.forward (search_box.get_delegate ());
                 return Gdk.EVENT_PROPAGATE;
             });
 
-            deck.notify["visible-child"].connect (() => {
+            leaflet.notify["visible-child"].connect (() => {
                 update_navigation ();
             });
 
-            deck.notify["transition-running"].connect (() => {
+            leaflet.notify["child-transition-running"].connect (() => {
                 update_navigation ();
             });
 
@@ -328,35 +255,29 @@ namespace Switchboard {
                 category_view.show_alert (_("No Settings Found"), _("Install some and re-launch Switchboard."), "dialog-warning");
             } else {
                 search_box.sensitive = true;
-                search_box.has_focus = true;
             }
-
-            Gtk.main ();
         }
 
         private void update_navigation () {
-            if (!deck.transition_running) {
-                if (plug_widgets[deck.get_adjacent_child (Hdy.NavigationDirection.FORWARD)] != null) {
-                    plug_widgets[deck.get_adjacent_child (Hdy.NavigationDirection.FORWARD)].hidden ();
+            if (!leaflet.child_transition_running) {
+                if (plug_widgets[leaflet.get_adjacent_child (Adw.NavigationDirection.FORWARD)] != null) {
+                    plug_widgets[leaflet.get_adjacent_child (Adw.NavigationDirection.FORWARD)].hidden ();
                 }
 
-                var previous_child = plug_widgets[deck.get_adjacent_child (Hdy.NavigationDirection.BACK)];
+                var previous_child = plug_widgets[leaflet.get_adjacent_child (Adw.NavigationDirection.BACK)];
                 if (previous_child != null && previous_child is Switchboard.Plug) {
                     previous_child.hidden ();
                 }
 
-                if (deck.visible_child == category_view) {
+                if (leaflet.visible_child == category_view) {
                     main_window.title = _("System Settings");
-                    title_stack.visible_child = search_box;
 
                     navigation_button.hide ();
 
                     search_box.sensitive = Switchboard.PlugsManager.get_default ().has_plugs ();
-                    search_box.has_focus = search_box.sensitive;
                 } else {
-                    plug_widgets[deck.visible_child].shown ();
-                    main_window.title = plug_widgets[deck.visible_child].display_name;
-                    title_stack.visible_child = title_label;
+                    plug_widgets[leaflet.visible_child].shown ();
+                    main_window.title = plug_widgets[leaflet.visible_child].display_name;
 
                     if (previous_child != null && previous_child is Switchboard.Plug) {
                         navigation_button.label = previous_child.display_name;
@@ -375,13 +296,13 @@ namespace Switchboard {
 
         public void load_plug (Switchboard.Plug plug) {
             Idle.add (() => {
-                while (deck.get_adjacent_child (Hdy.NavigationDirection.FORWARD) != null) {
-                    deck.remove (deck.get_adjacent_child (Hdy.NavigationDirection.FORWARD));
+                while (leaflet.get_adjacent_child (Adw.NavigationDirection.FORWARD) != null) {
+                    leaflet.remove (leaflet.get_adjacent_child (Adw.NavigationDirection.FORWARD));
                 }
 
                 var plug_widget = plug.get_widget ();
-                if (deck.get_children ().find (plug_widget) == null) {
-                    deck.add (plug_widget);
+                if (plug_widget.parent == null) {
+                    leaflet.append (plug_widget);
                 }
 
                 if (plug_widgets[plug_widget] == null) {
@@ -409,34 +330,26 @@ namespace Switchboard {
                 }
 
                 if (opened_directly) {
-                    deck.transition_duration = 0;
+                    leaflet.mode_transition_duration = 0;
                     opened_directly = false;
-                } else if (deck.transition_duration == 0) {
-                    deck.transition_duration = 200;
+                } else if (leaflet.mode_transition_duration == 0) {
+                    leaflet.mode_transition_duration = 200;
                 }
 
-                deck.visible_child = plug.get_widget ();
+                leaflet.visible_child = plug.get_widget ();
 
                 return false;
             }, GLib.Priority.DEFAULT_IDLE);
         }
 
-        private void shut_down () {
-            if (plug_widgets[deck.visible_child] != null && plug_widgets[deck.visible_child] is Switchboard.Plug) {
-                plug_widgets[deck.visible_child].hidden ();
-            }
-
-            Gtk.main_quit ();
-        }
-
         // Handles clicking the navigation button
         private void handle_navigation_button_clicked () {
-            if (deck.get_adjacent_child (Hdy.NavigationDirection.BACK) == category_view) {
+            if (leaflet.get_adjacent_child (Adw.NavigationDirection.BACK) == category_view) {
                 opened_directly = false;
-                deck.transition_duration = 200;
+                leaflet.mode_transition_duration = 200;
             }
 
-            deck.navigate (Hdy.NavigationDirection.BACK);
+            leaflet.navigate (Adw.NavigationDirection.BACK);
         }
 
         // Try to find a supported plug, fallback paths like "foo/bar" to "foo"
@@ -462,5 +375,10 @@ namespace Switchboard {
 
             return false;
         }
+
+        public static int main (string[] args) {
+            var app = new SwitchboardApp ();
+            return app.run (args);
+        }
     }
 }
diff --git a/src/CategoryView.vala b/src/CategoryView.vala
index b574265d..1e04568d 100644
--- a/src/CategoryView.vala
+++ b/src/CategoryView.vala
@@ -22,6 +22,8 @@
 namespace Switchboard {
 
     public class CategoryView : Gtk.Box {
+        public signal void plug_selected (Switchboard.Plug plug);
+
         public PlugsSearch plug_search { get; construct; }
         public Gee.ArrayList<SearchEntry?> plug_search_result { get; construct; }
         public Switchboard.Category personal_category { get; construct; }
@@ -32,11 +34,10 @@ namespace Switchboard {
         public string? plug_to_open { get; construct set; default = null; }
 
         private Gtk.Stack stack;
-        private Granite.Widgets.AlertView alert_view;
+        private Granite.Placeholder alert_view;
 
         construct {
-            alert_view = new Granite.Widgets.AlertView ("", "", "");
-            alert_view.get_style_context ().add_class (Gtk.STYLE_CLASS_DIM_LABEL);
+            alert_view = new Granite.Placeholder ("");
 
             personal_category = new Switchboard.Category (Switchboard.Plug.Category.PERSONAL);
             hardware_category = new Switchboard.Category (Switchboard.Plug.Category.HARDWARE);
@@ -46,33 +47,24 @@ namespace Switchboard {
             plug_search = new PlugsSearch ();
             plug_search_result = new Gee.ArrayList<SearchEntry?> ();
 
-            var category_box = new Gtk.Box (Gtk.Orientation.VERTICAL, 24) {
-                margin_top = 12,
-                margin_end = 12,
-                margin_bottom = 12,
-                margin_start = 12
+            var category_box = new Gtk.Box (Gtk.Orientation.VERTICAL, 0) {
+                margin_top = 12
             };
-            category_box.add (personal_category);
-            category_box.add (hardware_category);
-            category_box.add (network_category);
-            category_box.add (system_category);
+            category_box.append (personal_category);
+            category_box.append (hardware_category);
+            category_box.append (network_category);
+            category_box.append (system_category);
 
-            var clamp = new Hdy.Clamp () {
+            var category_scrolled = new Gtk.ScrolledWindow () {
                 child = category_box,
-                maximum_size = 800,
-                tightening_threshold = 800
-            };
-
-            var category_scrolled = new Gtk.ScrolledWindow (null, null) {
-                child = clamp,
                 hscrollbar_policy = Gtk.PolicyType.NEVER
             };
 
             stack = new Gtk.Stack ();
-            stack.add (alert_view);
+            stack.add_child (alert_view);
             stack.add_named (category_scrolled, "category-grid");
 
-            add (stack);
+            append (stack);
         }
 
         public CategoryView (string? plug = null) {
@@ -80,10 +72,9 @@ namespace Switchboard {
         }
 
         public void show_alert (string primary_text, string secondary_text, string icon_name) {
-            alert_view.show_all ();
             alert_view.title = primary_text;
             alert_view.description = secondary_text;
-            alert_view.icon_name = icon_name;
+            alert_view.icon = new ThemedIcon (icon_name);
 
             stack.visible_child = alert_view;
         }
diff --git a/src/SearchView.vala b/src/SearchView.vala
index 541c7162..f8a81534 100644
--- a/src/SearchView.vala
+++ b/src/SearchView.vala
@@ -17,29 +17,32 @@
 * Boston, MA 02110-1301 USA.
 */
 
-public class Switchboard.SearchView : Gtk.ScrolledWindow {
+public class Switchboard.SearchView : Gtk.Box {
     private Gtk.SearchEntry search_entry;
     private Gtk.ListBox listbox;
 
     construct {
-        var alert_view = new Granite.Widgets.AlertView (
-            "",
-            _("Try changing search terms."),
-            "edit-find-symbolic"
-        );
-        alert_view.get_style_context ().add_class (Gtk.STYLE_CLASS_DIM_LABEL);
-        alert_view.show_all ();
+        var alert_view = new Granite.Placeholder ("") {
+            description = _("Try changing search terms."),
+            icon = new ThemedIcon ("edit-find-symbolic")
+        };
+        alert_view.add_css_class (Granite.STYLE_CLASS_DIM_LABEL);
 
         unowned SwitchboardApp app = (SwitchboardApp) GLib.Application.get_default ();
 
         search_entry = app.search_box;
 
         listbox = new Gtk.ListBox ();
+        listbox.add_css_class ("rich-list");
         listbox.selection_mode = Gtk.SelectionMode.BROWSE;
         listbox.set_filter_func (filter_func);
         listbox.set_placeholder (alert_view);
 
-        add (listbox);
+        var scrolled = new Gtk.ScrolledWindow () {
+            child = listbox
+        };
+
+        append (scrolled);
 
         load_plugs.begin ();
 
@@ -86,7 +89,7 @@ public class Switchboard.SearchView : Gtk.ScrolledWindow {
                 plug.display_name,
                 uri
             );
-            listbox.add (search_row);
+            listbox.append (search_row);
 
             // Using search to get sub settings
             var search_results = yield plug.search ("");
@@ -111,11 +114,9 @@ public class Switchboard.SearchView : Gtk.ScrolledWindow {
                     title,
                     (owned) sub_uri
                 );
-                listbox.add (search_row);
+                listbox.append (search_row);
             }
         }
-
-        show_all ();
     }
 
     private class SearchRow : Gtk.ListBoxRow {
@@ -132,7 +133,9 @@ public class Switchboard.SearchView : Gtk.ScrolledWindow {
         }
 
         construct {
-            var image = new Gtk.Image.from_icon_name (icon_name, Gtk.IconSize.DND);
+            var image = new Gtk.Image.from_icon_name (icon_name) {
+                pixel_size = 32
+            };
 
             var label = new Gtk.Label (description);
             label.ellipsize = Pango.EllipsizeMode.MIDDLE;
@@ -140,14 +143,13 @@ public class Switchboard.SearchView : Gtk.ScrolledWindow {
             label.width_chars = 80;
             label.xalign = 0;
 
-            var grid = new Gtk.Grid ();
-            grid.halign = Gtk.Align.CENTER;
-            grid.column_spacing = 12;
-            grid.margin = 6;
-            grid.add (image);
-            grid.add (label);
+            var box = new Gtk.Box (Gtk.Orientation.HORIZONTAL, 12) {
+                halign = Gtk.Align.CENTER
+            };
+            box.append (image);
+            box.append (label);
 
-            add (grid);
+            child = box;
         }
     }
 }
diff --git a/src/Widgets/CategoryFlowBox.vala b/src/Widgets/CategoryFlowBox.vala
index b255ab7e..04b2d025 100644
--- a/src/Widgets/CategoryFlowBox.vala
+++ b/src/Widgets/CategoryFlowBox.vala
@@ -56,22 +56,29 @@ namespace Switchboard {
 
         public Gee.ArrayList get_plugs () {
             var plugs = new Gee.ArrayList<Plug?> ();
-            foreach (unowned Gtk.Widget child in flowbox.get_children ()) {
+
+            var child = flowbox.get_first_child ();
+            while (child != null) {
                 plugs.add (((CategoryIcon) child).plug);
+                child = child.get_next_sibling ();
             }
+
             return plugs;
         }
 
         public new void add (Gtk.Widget widget) {
-            flowbox.add (widget);
+            flowbox.append (widget);
         }
 
         public bool has_child () {
-           foreach (unowned Gtk.Widget child in flowbox.get_children ()) {
-               if (child.get_child_visible ()) {
-                   show_all ();
-                   return true;
-               }
+            var child = flowbox.get_first_child ();
+            while (child != null) {
+                if (child.get_child_visible ()) {
+                    show ();
+                    return true;
+                }
+
+                child = child.get_next_sibling ();
             }
 
             hide ();
diff --git a/src/Widgets/CategoryIcon.vala b/src/Widgets/CategoryIcon.vala
index 64756f3d..a2268a86 100644
--- a/src/Widgets/CategoryIcon.vala
+++ b/src/Widgets/CategoryIcon.vala
@@ -30,28 +30,26 @@ public class Switchboard.CategoryIcon : Gtk.FlowBoxChild {
     }
 
     construct {
-        var icon = new Gtk.Image.from_icon_name (plug.icon, Gtk.IconSize.DND) {
+        var icon = new Gtk.Image.from_icon_name (plug.icon) {
             pixel_size = 32,
             tooltip_text = plug.description
         };
 
-        var plug_name = new Gtk.Label (plug.display_name) {
-            hexpand = true,
-            wrap = true,
-            wrap_mode = Pango.WrapMode.WORD_CHAR,
-            xalign = 0
-        };
+        var plug_name = new Gtk.Label (plug.display_name);
+        plug_name.justify = Gtk.Justification.CENTER;
+        plug_name.max_width_chars = 18;
+        plug_name.wrap = true;
+        plug_name.wrap_mode = Pango.WrapMode.WORD_CHAR;
 
-        var layout = new Gtk.Box (Gtk.Orientation.HORIZONTAL, 6) {
+        var layout = new Gtk.Box (Gtk.Orientation.VERTICAL, 0) {
+            halign = Gtk.Align.CENTER,
             margin_top = 6,
             margin_end = 6,
             margin_bottom = 6,
             margin_start = 6
         };
-        layout.add (icon);
-        layout.add (plug_name);
-
-        size_group.add_widget (layout);
+        layout.append (icon);
+        layout.append (plug_name);
 
         child = layout;
 
diff --git a/src/meson.build b/src/meson.build
index ceacc8b2..feb30858 100644
--- a/src/meson.build
+++ b/src/meson.build
@@ -10,7 +10,7 @@ switchboard_files = files(
 switchboard_deps = [
     libswitchboard_dep,
     granite_dep,
-    handy_dep,
+    adwaita_dep,
     m_dep
 ]
 
From 6875ecbbed18c1ce290e4fc0b0ca1c8a0c27969e Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Danielle=20For=C3=A9?= <daniel@elementary.io>
Date: Tue, 14 Jun 2022 10:22:19 -0700
Subject: [PATCH] Lib: bump to libswitchboard-3 (#236)

---
 data/meson.build                              | 31 ++++++++++---------
 ...appdata.xml.in => settings.appdata.xml.in} |  6 ++--
 ...chboard.desktop.in => settings.desktop.in} |  4 +--
 ...board.gschema.xml => settings.gschema.xml} |  9 +-----
 meson.build                                   |  4 +--
 po/extra/POTFILES                             |  4 +--
 src/Application.vala                          |  8 ++---
 9 files changed, 36 insertions(+), 42 deletions(-)
 rename data/{io.elementary.switchboard.appdata.xml.in => settings.appdata.xml.in} (95%)
 rename data/{io.elementary.switchboard.desktop.in => settings.desktop.in} (78%)
 rename data/{io.elementary.switchboard.gschema.xml => settings.gschema.xml} (54%)

diff --git a/data/meson.build b/data/meson.build
index 1d155bed..01e85cc9 100644
--- a/data/meson.build
+++ b/data/meson.build
@@ -1,24 +1,27 @@
 po_extra_dir = join_paths(meson.source_root(), 'po', 'extra')
-i18n.merge_file(
-    input: 'io.elementary.switchboard.desktop.in',
-    output: 'io.elementary.switchboard.desktop',
-    install: true,
-    install_dir: join_paths(get_option('datadir'), 'applications'),
-    po_dir: po_extra_dir,
-    type: 'desktop'
+
+install_data(
+    'settings.gschema.xml',
+    install_dir: get_option('datadir') / 'glib-2.0' / 'schemas',
+    rename: meson.project_name() + '.gschema.xml'
 )
 
 i18n.merge_file(
-    input: 'io.elementary.switchboard.appdata.xml.in',
-    output: 'io.elementary.switchboard.appdata.xml',
+    input: 'settings.desktop.in',
+    output: meson.project_name() + '.desktop',
+    po_dir: po_extra_dir,
+    type: 'desktop',
     install: true,
-    install_dir: join_paths(get_option('datadir'), 'metainfo'),
-    po_dir: po_extra_dir
+    install_dir: get_option('datadir') / 'applications'
 )
 
-install_data(
-    'io.elementary.switchboard.gschema.xml',
-    install_dir: join_paths(get_option('datadir'), 'glib-2.0', 'schemas')
+i18n.merge_file(
+    input: 'settings.appdata.xml.in',
+    output: meson.project_name() + '.appdata.xml',
+    po_dir: po_extra_dir,
+    type: 'xml',
+    install: true,
+    install_dir: get_option('datadir') / 'metainfo',
 )
 
 icon_sizes = ['24', '32', '48', '64', '128']
diff --git a/data/io.elementary.switchboard.appdata.xml.in b/data/settings.appdata.xml.in
similarity index 95%
rename from data/io.elementary.switchboard.appdata.xml.in
rename to data/settings.appdata.xml.in
index d9d4cae3..035c33c7 100644
--- a/data/io.elementary.switchboard.appdata.xml.in
+++ b/data/settings.appdata.xml.in
@@ -1,8 +1,8 @@
 <?xml version="1.0" encoding="UTF-8"?>
 <!-- Copyright 2015-2022 elementary, LLC <contact@elementary.io> -->
 <component type="desktop-application">
-  <id>io.elementary.switchboard</id>
-  <launchable type="desktop-id">io.elementary.switchboard.desktop</launchable>
+  <id>io.elementary.settings</id>
+  <launchable type="desktop-id">io.elementary.settings.desktop</launchable>
   <metadata_license>CC0-1.0</metadata_license>
   <project_license>GPL-3.0+</project_license>
 
@@ -22,7 +22,7 @@
   <content_rating type="oars-1.1" />
 
   <provides>
-    <binary>io.elementary.switchboard</binary>
+    <binary>io.elementary.settings</binary>
   </provides>
 
   <url type="homepage">https://elementary.io/</url>
diff --git a/data/io.elementary.switchboard.desktop.in b/data/settings.desktop.in
similarity index 78%
rename from data/io.elementary.switchboard.desktop.in
rename to data/settings.desktop.in
index a4dd8b59..02907e94 100644
--- a/data/io.elementary.switchboard.desktop.in
+++ b/data/settings.desktop.in
@@ -2,8 +2,8 @@
 Type=Application
 Name=System Settings
 Comment=Change system and user settings
-Exec=io.elementary.switchboard %u
-Icon=io.elementary.switchboard
+Exec=io.elementary.settings %u
+Icon=io.elementary.settings
 Terminal=false
 StartupNotify=true
 Categories=GNOME;GTK;System;
diff --git a/data/io.elementary.switchboard.gschema.xml b/data/settings.gschema.xml
similarity index 54%
rename from data/io.elementary.switchboard.gschema.xml
rename to data/settings.gschema.xml
index c094472f..4552591b 100644
--- a/data/io.elementary.switchboard.gschema.xml
+++ b/data/settings.gschema.xml
@@ -1,6 +1,6 @@
 <?xml version="1.0" encoding="UTF-8"?>
 <schemalist>
-	<schema path="/io/elementary/switchboard/saved-state/" id="io.elementary.switchboard.saved-state">
+	<schema path="/io/elementary/settings/" id="io.elementary.settings">
     <key name="window-maximized" type="b">
       <default>false</default>
       <summary>Whether the window was maximized on last run</summary>
@@ -17,11 +17,4 @@
       <description>Most recent window width</description>
     </key>
 	</schema>
-	<schema path="/io/elementary/switchboard/preferences/" id="io.elementary.switchboard.preferences">
-		<key name="mapping-override" type="a{s(ss)}">
-			<default>{}</default>
-			<summary>Override (and extends) the default mapping with plugs</summary>
-			<description>Contains a dictionary of path and two strings: the plug name and an argument. For example {'wallpaper': ('foo-desktop','wallpaper'), 'display': ('bar-display','')}</description>
-		</key>
-	</schema>
 </schemalist>

diff --git a/meson.build b/meson.build
index 7b829556..999c5f05 100644
--- a/meson.build
+++ b/meson.build
@@ -1,5 +1,5 @@
 project(
-    'io.elementary.switchboard',
+    'io.elementary.settings',
     'c', 'vala',
     version: '6.0.2',
 )
 
 i18n = import('i18n')
 pkg = import('pkgconfig')
diff --git a/po/extra/POTFILES b/po/extra/POTFILES
index 6820b352..3d6df803 100644
--- a/po/extra/POTFILES
+++ b/po/extra/POTFILES
@@ -1,3 +1,3 @@
-data/io.elementary.switchboard.desktop.in
-data/io.elementary.switchboard.appdata.xml.in
+data/settings.desktop.in
+data/settings.appdata.xml.in
 
diff --git a/src/Application.vala b/src/Application.vala
index 54b32649..b8427c36 100644
--- a/src/Application.vala
+++ b/src/Application.vala
@@ -39,7 +39,7 @@ namespace Switchboard {
         private static string? plug_to_open = null;
 
         construct {
-            application_id = "io.elementary.switchboard";
+            application_id = "io.elementary.settings";
             flags |= ApplicationFlags.HANDLES_OPEN;
 
             GLib.Intl.setlocale (LocaleCategory.ALL, "");
@@ -77,9 +77,7 @@ namespace Switchboard {
 
         public override void activate () {
             var plugsmanager = Switchboard.PlugsManager.get_default ();
-            var setting = new Settings ("io.elementary.switchboard.preferences");
-            var mapping_dic = setting.get_value ("mapping-override");
-            if (link != null && !mapping_dic.lookup (link, "(ss)", ref plug_to_open, ref open_window)) {
+            if (link != null) {
                 bool plug_found = load_setting_path (link, plugsmanager);
 
                 if (plug_found) {
@@ -186,7 +184,7 @@ namespace Switchboard {
             * Set maximize after height/width else window is min size on unmaximize
             * Bind maximize as SET else get get bad sizes
             */
-            var settings = new Settings ("io.elementary.music");
+            var settings = new Settings ("io.elementary.settings");
             settings.bind ("window-height", main_window, "default-height", SettingsBindFlags.DEFAULT);
             settings.bind ("window-width", main_window, "default-width", SettingsBindFlags.DEFAULT);
 
From 92f27b8ea1ecdf7494ba2d64e8a38b99291f4bee Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Danielle=20For=C3=A9?= <daniel@elementary.io>
Date: Tue, 14 Jun 2022 10:28:55 -0700
Subject: [PATCH] Application: force use portals (#221)

---
 src/Application.vala | 1 +
 1 file changed, 1 insertion(+)

diff --git a/src/Application.vala b/src/Application.vala
index b8427c36..2ce195b5 100644
--- a/src/Application.vala
+++ b/src/Application.vala
@@ -42,6 +42,7 @@ namespace Switchboard {
             application_id = "io.elementary.settings";
             flags |= ApplicationFlags.HANDLES_OPEN;
 
+            Environment.set_variable ("GTK_USE_PORTAL", "1", true);
             GLib.Intl.setlocale (LocaleCategory.ALL, "");
             GLib.Intl.bindtextdomain (GETTEXT_PACKAGE, LOCALEDIR);
             GLib.Intl.bind_textdomain_codeset (GETTEXT_PACKAGE, "UTF-8");
From f3a843dd4a4e35b2dbb0e3e4992960bb6a620afd Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Danielle=20For=C3=A9?= <daniel@elementary.io>
Date: Tue, 14 Jun 2022 11:02:30 -0700
Subject: [PATCH] Application: Put everything in a WindowHandle (#237)

---
 src/Application.vala | 6 +++++-
 1 file changed, 5 insertions(+), 1 deletion(-)

diff --git a/src/Application.vala b/src/Application.vala
index 2ce195b5..c4d7b885 100644
--- a/src/Application.vala
+++ b/src/Application.vala
@@ -167,9 +167,13 @@ namespace Switchboard {
 
             var window_eventcontrollerkey = new Gtk.EventControllerKey ();
 
+            var window_handle = new Gtk.WindowHandle () {
+                child = search_stack
+            };
+
             main_window = new Gtk.Window () {
                 application = this,
-                child = search_stack,
+                child = window_handle,
                 icon_name = application_id,
                 title = _("System Settings"),
                 titlebar = headerbar
From e6c2609c1890fba5e27224dc8edc84bd9544ac6f Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Danielle=20For=C3=A9?= <daniel@elementary.io>
Date: Tue, 14 Jun 2022 11:14:22 -0700
Subject: [PATCH] SearchView: use clamp instead of width_chars (#238)

---
 src/SearchView.vala | 21 +++++++++++----------
 1 file changed, 11 insertions(+), 10 deletions(-)

diff --git a/src/SearchView.vala b/src/SearchView.vala
index f8a81534..e701b38a 100644
--- a/src/SearchView.vala
+++ b/src/SearchView.vala
@@ -26,7 +26,6 @@ public class Switchboard.SearchView : Gtk.Box {
             description = _("Try changing search terms."),
             icon = new ThemedIcon ("edit-find-symbolic")
         };
-        alert_view.add_css_class (Granite.STYLE_CLASS_DIM_LABEL);
 
         unowned SwitchboardApp app = (SwitchboardApp) GLib.Application.get_default ();
 
@@ -38,10 +37,16 @@ public class Switchboard.SearchView : Gtk.Box {
         listbox.set_filter_func (filter_func);
         listbox.set_placeholder (alert_view);
 
+        var clamp = new Adw.Clamp () {
+            child = listbox,
+            maximum_size = 800
+        };
+
         var scrolled = new Gtk.ScrolledWindow () {
-            child = listbox
+            child = clamp
         };
 
+        add_css_class (Granite.STYLE_CLASS_VIEW);
         append (scrolled);
 
         load_plugs.begin ();
@@ -137,15 +142,11 @@ public class Switchboard.SearchView : Gtk.Box {
                 pixel_size = 32
             };
 
-            var label = new Gtk.Label (description);
-            label.ellipsize = Pango.EllipsizeMode.MIDDLE;
-            label.max_width_chars = 80;
-            label.width_chars = 80;
-            label.xalign = 0;
-
-            var box = new Gtk.Box (Gtk.Orientation.HORIZONTAL, 12) {
-                halign = Gtk.Align.CENTER
+            var label = new Gtk.Label (description) {
+                ellipsize = Pango.EllipsizeMode.MIDDLE
             };
+
+            var box = new Gtk.Box (Gtk.Orientation.HORIZONTAL, 12);
             box.append (image);
             box.append (label);
 
From 9cc8a9cefa7456313bdfaf56ee0d1725deef3a41 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Danielle=20For=C3=A9?= <daniel@elementary.io>
Date: Tue, 14 Jun 2022 11:18:40 -0700
Subject: [PATCH] Application: center searchbox in categoryview (#239)

---
 src/Application.vala | 20 +++++++++++++++++++-
 1 file changed, 19 insertions(+), 1 deletion(-)

diff --git a/src/Application.vala b/src/Application.vala
index c4d7b885..04b80482 100644
--- a/src/Application.vala
+++ b/src/Application.vala
@@ -32,6 +32,7 @@ namespace Switchboard {
         private Gtk.Window main_window;
         private Switchboard.CategoryView category_view;
         private Gtk.Label title_label;
+        private Gtk.Stack title_stack;
 
         private static bool opened_directly = false;
         private static string? link = null;
@@ -143,8 +144,23 @@ namespace Switchboard {
             };
             search_box.add_controller (search_box_eventcontrollerkey);
 
+            title_label = new Gtk.Label ("");
+            title_label.add_css_class (Granite.STYLE_CLASS_TITLE_LABEL);
+
+            title_stack = new Gtk.Stack () {
+                hexpand = true
+            };
+            title_stack.add_child (search_box);
+            title_stack.add_child (title_label);
+
+            var title_clamp = new Adw.Clamp () {
+                child = title_stack,
+                maximum_size = 800
+            };
+
             headerbar = new Gtk.HeaderBar () {
-                show_title_buttons = true
+                show_title_buttons = true,
+                title_widget = title_clamp
             };
             headerbar.pack_start (navigation_button);
 
@@ -274,6 +290,7 @@ namespace Switchboard {
 
                 if (leaflet.visible_child == category_view) {
                     main_window.title = _("System Settings");
+                    title_stack.visible_child = search_box;
 
                     navigation_button.hide ();
 
@@ -281,6 +298,7 @@ namespace Switchboard {
                 } else {
                     plug_widgets[leaflet.visible_child].shown ();
                     main_window.title = plug_widgets[leaflet.visible_child].display_name;
+                    title_stack.visible_child = title_label;
 
                     if (previous_child != null && previous_child is Switchboard.Plug) {
                         navigation_button.label = previous_child.display_name;
From 404044b291b15c35ed4b0dcfb5f06deb049ed736 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Danielle=20For=C3=A9?= <daniel@elementary.io>
Date: Tue, 14 Jun 2022 11:22:01 -0700
Subject: [PATCH] Application: don't allow leaflet to unfold (#240)

---
 src/Application.vala | 3 ++-
 1 file changed, 2 insertions(+), 1 deletion(-)

diff --git a/src/Application.vala b/src/Application.vala
index 04b80482..369bc48b 100644
--- a/src/Application.vala
+++ b/src/Application.vala
@@ -169,7 +169,8 @@ namespace Switchboard {
 
             leaflet = new Adw.Leaflet () {
                 can_navigate_back = true,
-                can_navigate_forward = true
+                can_navigate_forward = true,
+                can_unfold = false
             };
             leaflet.append (category_view);
 
From 61663e5f8f9c40e5d821480d5decd2c32fe9c6f4 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Danielle=20For=C3=A9?= <daniel@elementary.io>
Date: Tue, 5 Jul 2022 11:16:36 -0700
Subject: [PATCH] Responsive (#233)

---
 src/Application.vala          |  1 -
 src/CategoryView.vala         | 15 ++++++++++++---
 src/Widgets/CategoryIcon.vala | 16 +++++++++-------
 3 files changed, 21 insertions(+), 11 deletions(-)

diff --git a/src/Application.vala b/src/Application.vala
index 369bc48b..56b589cb 100644
--- a/src/Application.vala
+++ b/src/Application.vala
@@ -195,7 +195,6 @@ namespace Switchboard {
                 title = _("System Settings"),
                 titlebar = headerbar
             };
-            main_window.set_size_request (640, 480);
             add_window (main_window);
             main_window.present ();
 
diff --git a/src/CategoryView.vala b/src/CategoryView.vala
index 1e04568d..d605a73d 100644
--- a/src/CategoryView.vala
+++ b/src/CategoryView.vala
@@ -47,8 +47,11 @@ namespace Switchboard {
             plug_search = new PlugsSearch ();
             plug_search_result = new Gee.ArrayList<SearchEntry?> ();
 
-            var category_box = new Gtk.Box (Gtk.Orientation.VERTICAL, 0) {
-                margin_top = 12
+            var category_box = new Gtk.Box (Gtk.Orientation.VERTICAL, 24) {
+                margin_top = 12,
+                margin_end = 12,
+                margin_bottom = 12,
+                margin_start = 12
             };
             category_box.append (personal_category);
             category_box.append (hardware_category);
@@ -64,7 +67,13 @@ namespace Switchboard {
             stack.add_child (alert_view);
             stack.add_named (category_scrolled, "category-grid");
 
-            append (stack);
+            var clamp = new Adw.Clamp () {
+                child = stack,
+                maximum_size = 800,
+                tightening_threshold = 800
+            };
+
+            append (clamp);
         }
 
         public CategoryView (string? plug = null) {
diff --git a/src/Widgets/CategoryIcon.vala b/src/Widgets/CategoryIcon.vala
index a2268a86..36c61a61 100644
--- a/src/Widgets/CategoryIcon.vala
+++ b/src/Widgets/CategoryIcon.vala
@@ -35,14 +35,14 @@ public class Switchboard.CategoryIcon : Gtk.FlowBoxChild {
             tooltip_text = plug.description
         };
 
-        var plug_name = new Gtk.Label (plug.display_name);
-        plug_name.justify = Gtk.Justification.CENTER;
-        plug_name.max_width_chars = 18;
-        plug_name.wrap = true;
-        plug_name.wrap_mode = Pango.WrapMode.WORD_CHAR;
+        var plug_name = new Gtk.Label (plug.display_name) {
+            hexpand = true,
+            wrap = true,
+            wrap_mode = Pango.WrapMode.WORD_CHAR,
+            xalign = 0
+        };
 
-        var layout = new Gtk.Box (Gtk.Orientation.VERTICAL, 0) {
-            halign = Gtk.Align.CENTER,
+        var layout = new Gtk.Box (Gtk.Orientation.HORIZONTAL, 6) {
             margin_top = 6,
             margin_end = 6,
             margin_bottom = 6,
@@ -51,6 +51,8 @@ public class Switchboard.CategoryIcon : Gtk.FlowBoxChild {
         layout.append (icon);
         layout.append (plug_name);
 
+        size_group.add_widget (layout);
+
         child = layout;
 
         plug.visibility_changed.connect (() => {
From d5d8442992de086c6a9febc3b359abc8044bddd3 Mon Sep 17 00:00:00 2001
From: lenemter <lenemter@gmail.com>
Date: Mon, 26 Sep 2022 00:08:54 +0900
Subject: [PATCH] Omit plug_selected signal (#248)

---
 src/CategoryView.vala | 2 --
 1 file changed, 2 deletions(-)

diff --git a/src/CategoryView.vala b/src/CategoryView.vala
index d605a73d..9510d644 100644
--- a/src/CategoryView.vala
+++ b/src/CategoryView.vala
@@ -22,8 +22,6 @@
 namespace Switchboard {
 
     public class CategoryView : Gtk.Box {
-        public signal void plug_selected (Switchboard.Plug plug);
-
         public PlugsSearch plug_search { get; construct; }
         public Gee.ArrayList<SearchEntry?> plug_search_result { get; construct; }
         public Switchboard.Category personal_category { get; construct; }
From 19e85e3486dd314cde0ced0a1839ef3d3b00d30d Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Danielle=20For=C3=A9?= <daniel@elementary.io>
Date: Mon, 26 Sep 2022 19:50:08 -0700
Subject: [PATCH] Application: don't load new plugs during a transition (#249)

---
 src/Application.vala | 4 ++++
 1 file changed, 4 insertions(+)

diff --git a/src/Application.vala b/src/Application.vala
index 56b589cb..03e90324 100644
--- a/src/Application.vala
+++ b/src/Application.vala
@@ -316,6 +316,10 @@ namespace Switchboard {
         }
 
         public void load_plug (Switchboard.Plug plug) {
+            if (leaflet.child_transition_running) {
+                return;
+            }
+
             Idle.add (() => {
                 while (leaflet.get_adjacent_child (Adw.NavigationDirection.FORWARD) != null) {
                     leaflet.remove (leaflet.get_adjacent_child (Adw.NavigationDirection.FORWARD));
From 8f864fe272d0bc16dff73046f458b4149692c829 Mon Sep 17 00:00:00 2001
From: Ryo Nakano <26003928+ryonakano@users.noreply.github.com>
Date: Sun, 30 Oct 2022 02:05:45 +0900
Subject: [PATCH] SamplePlug: Remove show_all for GTK 4 (#251)

---
 sample/SamplePlug.vala     | 1 -
 2 files changed, 2 insertions(+), 5 deletions(-)

diff --git a/sample/SamplePlug.vala b/sample/SamplePlug.vala
index 9247c9c0..d953e99d 100644
--- a/sample/SamplePlug.vala
+++ b/sample/SamplePlug.vala
@@ -39,7 +39,6 @@ public class Sample.Plug : Switchboard.Plug {
             main_grid.attach (hello_label, 0, 0, 1, 1);
         }
 
-        main_grid.show_all ();
         return main_grid;
     }
 
From 6c1d04ffd24b77177bc18bc7252cb872e3f52ec0 Mon Sep 17 00:00:00 2001
From: Jeremy Wootten <jeremy@elementaryos.org>
Date: Sat, 13 May 2023 18:20:36 +0100
Subject: [PATCH] Fix terminal warning on navigate (#260)

* update_navigation: Test for CategoryView better

* Fix trailing spaces
---
 lib/Plug.vala        | 12 ++++++------
 src/Application.vala | 15 +++++++++++----
 2 files changed, 17 insertions(+), 10 deletions(-)

diff --git a/lib/Plug.vala b/lib/Plug.vala
index f1a51e7a..3fabb32b 100644
--- a/lib/Plug.vala
+++ b/lib/Plug.vala
@@ -33,14 +33,14 @@ public abstract class Switchboard.Plug : GLib.Object {
 
     /**
      * The category under which the plug will be stored.
-     * 
+     *
      * Possible {@link Category} values are PERSONAL, HARDWARE, NETWORK or SYSTEM.
      */
     public Category category { get; construct; }
 
     /**
      * The unique name representing the plug.
-     * 
+     *
      * It is also used to recognise it with the open-plug command.
      * for example "system-pantheon-info" for the official Info plug of the pantheon desktop.
      */
@@ -95,16 +95,16 @@ public abstract class Switchboard.Plug : GLib.Object {
 
     /**
      * Called when the plug disappear to the user.
-     * 
+     *
      * This is not called when the plug got destroyed or the window is closed, use ~Plug () instead.
      */
     public abstract void hidden ();
 
     /**
      * This function should return the widget that contain the whole interface.
-     * 
+     *
      * When the user click on an action, the second parameter is send to the {@link search_callback} method
-     * 
+     *
      * @param search a {@link string} that represent the search.
      * @return a {@link Gee.TreeMap} containing two strings like {"Keyboard → Behavior → Duration", "keyboard<sep>behavior"}.
      */
@@ -112,7 +112,7 @@ public abstract class Switchboard.Plug : GLib.Object {
 
     /**
      * This function is used when the user click on a search result, it should show the selected setting (right tab…).
-     * 
+     *
      * @param location a {@link string} that represents the setting to show.
      */
     public abstract void search_callback (string location);
diff --git a/src/Application.vala b/src/Application.vala
index 03e90324..be6cec12 100644
--- a/src/Application.vala
+++ b/src/Application.vala
@@ -288,7 +288,8 @@ namespace Switchboard {
                     previous_child.hidden ();
                 }
 
-                if (leaflet.visible_child == category_view) {
+                var visible_widget = leaflet.visible_child;
+                if (visible_widget is Switchboard.CategoryView) {
                     main_window.title = _("System Settings");
                     title_stack.visible_child = search_box;
 
@@ -296,9 +297,15 @@ namespace Switchboard {
 
                     search_box.sensitive = Switchboard.PlugsManager.get_default ().has_plugs ();
                 } else {
-                    plug_widgets[leaflet.visible_child].shown ();
-                    main_window.title = plug_widgets[leaflet.visible_child].display_name;
-                    title_stack.visible_child = title_label;
+                    var plug = plug_widgets[visible_widget];
+                    if (plug != null) {
+                        plug.shown ();
+                        main_window.title = plug.display_name;
+                        title_stack.visible_child = title_label;
+                    } else {
+                        critical ("Visible child is not CategoryView nor is associated with a Plug.");
+                    }
+
 
                     if (previous_child != null && previous_child is Switchboard.Plug) {
                         navigation_button.label = previous_child.display_name;
