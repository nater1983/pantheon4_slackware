From a54cfe8b9cf632f256b1e01daaf08a8c8e2c9b97 Mon Sep 17 00:00:00 2001
From: Reverter <reverter@example.com>
Date: Thu, 27 Jul 2024 10:00:00 +0200
Subject: [PATCH] Revert "Add system updates (#280)"

This reverts commit 2d1d9e504b6affc6c275cbff097b5d129be56576.
---
 po/POTFILES                          |   1 -
 src/DBus/SystemUpdate.vala           |  29 --------
 src/Views/OperatingSystemView.vala   | 277 +----------------------------------
 src/Widgets/UpdateDetailsDialog.vala |  72 ----------
 src/meson.build                      |   4 -
 5 files changed, 0 insertions(+), 383 deletions(-)
 delete mode 100644 src/DBus/SystemUpdate.vala
 delete mode 100644 src/Widgets/UpdateDetailsDialog.vala

diff --git a/po/POTFILES b/po/POTFILES
index c48ca9870..6a97cd119 100644
--- a/po/POTFILES
+++ b/po/POTFILES
@@ -4,4 +4,3 @@ src/Views/FirmwareView.vala
 src/Views/HardwareView.vala
 src/Views/OperatingSystemView.vala
 src/Widgets/FirmwareUpdateRow.vala
-src/Widgets/UpdateDetailsDialog.vala
diff --git a/src/DBus/SystemUpdate.vala b/src/DBus/SystemUpdate.vala
deleted file mode 100644
index 4929a5c27..000000000
--- a/src/DBus/SystemUpdate.vala
+++ /dev/null
@@ -1,29 +0,0 @@
-[DBus (name="io.elementary.settings_daemon.SystemUpdate")]
-public interface SystemUpdate : Object {
-    public enum State {
-        UP_TO_DATE,
-        CHECKING,
-        AVAILABLE,
-        DOWNLOADING,
-        RESTART_REQUIRED,
-        ERROR
-    }
-
-    public struct CurrentState {
-        State state;
-        string message;
-    }
-
-    public struct UpdateDetails {
-        string[] packages;
-        int size;
-    }
-
-    public signal void state_changed ();
-
-    public abstract async CurrentState get_current_state () throws DBusError, IOError;
-    public abstract async UpdateDetails get_update_details () throws DBusError, IOError;
-    public abstract async void cancel () throws DBusError, IOError;
-    public abstract async void check_for_updates (bool force, bool notify) throws DBusError, IOError;
-    public abstract async void update () throws DBusError, IOError;
-}
diff --git a/src/Views/OperatingSystemView.vala b/src/Views/OperatingSystemView.vala
index a8951c6b3..3546813e0 100644
--- a/src/Views/OperatingSystemView.vala
+++ b/src/Views/OperatingSystemView.vala
@@ -19,246 +19,10 @@
 
 public class About.OperatingSystemView : Gtk.Box {
     private string support_url;
-    private static Settings update_settings = new Settings ("io.elementary.settings-daemon.system-update");
 
-    private string support_url;
-    private Gtk.StringList packages;
-    private SystemUpdate? update_proxy = null;
-    private SystemUpdate.CurrentState? current_state = null;
     private Gtk.Grid software_grid;
-    private Gtk.Image updates_image;
-    private Gtk.Label updates_title;
-    private Gtk.Label updates_description;
-    private Gtk.Revealer details_button_revealer;
-    private Gtk.Stack button_stack;
 
     construct {
-        var style_provider = new Gtk.CssProvider ();
         Gtk.StyleContext.add_provider_for_display (
             Gdk.Display.get_default (),
             style_provider,
             Gtk.STYLE_PROVIDER_PRIORITY_APPLICATION
         );
-        style_provider.load_from_resource ("/io/elementary/about/style.css");
-
-        var logo_icon_name = "system-distributor-logo";
-        var logo_image = new Gtk.Image.from_icon_name (logo_icon_name) {
-            pixel_size = 128,
-            icon_size = Gtk.IconSize.DIALOG,
-            icon_name = logo_icon_name,
-        };
-
-        var logo_overlay = new Gtk.Overlay () {
-            valign = START
-        };
-
-        if (Gtk.IconTheme.get_for_display (Gdk.Display.get_default ()).has_icon (logo_icon_name + "-symbolic")) {
-            foreach (unowned var path in Environment.get_system_data_dirs ()) {
-                var candidate = path + "/icons/" + logo_icon_name + "/symbolic.svg";
-                if (FileUtils.access (candidate, FileUtils.FileTest.EXISTS)) {
-                    var symbolic = new Gtk.Image.from_file (candidate);
-                    symbolic.pixel_size = 128;
-                    logo_overlay.add_overlay (symbolic);
-                    break;
-                }
-            }
-        }
-
-        logo_overlay.add (logo_image);
-        logo_overlay.set_overlay_pass_through (logo_image, true);
-
-        var pretty_name = Environment.get_os_info (GLib.OsInfoKey.PRETTY_NAME);
-        if (pretty_name == null) {
-            pretty_name = "elementary OS";
-        }
-
-        var title = new Gtk.Label (pretty_name) {
-            ellipsize = Pango.EllipsizeMode.END,
-            selectable = true,
-            use_markup = true,
-            xalign = 0
-        };
-        title.add_css_class (Granite.STYLE_CLASS_TITLE_LABEL);
-
-        var kernel_version_label = new Gtk.Label (Environment.get_os_info (GLib.OsInfoKey.KERNEL_VERSION)) {
-            selectable = true,
-            xalign = 0
-        };
-        kernel_version_label.add_css_class (Granite.STYLE_CLASS_SMALL_LABEL);
-        kernel_version_label.add_css_class (Granite.STYLE_CLASS_DIM_LABEL);
-
-        var website_url = Environment.get_os_info (GLib.OsInfoKey.HOME_URL);
-        if (website_url == "" || website_url == null) {
-            website_url = "https://elementary.io";
-        }
-
-        var website_label = new Gtk.LinkButton.with_label (website_url, _("Website"));
-
-
-        var help_button = new Gtk.LinkButton.with_label (support_url, _("Get Support")) {
-            halign = Gtk.Align.CENTER,
-            hexpand = true
-        };
-
-        var translate_button = new Gtk.LinkButton.with_label (
-            "https://l10n.elementary.io/projects/",
-            _("Suggest Translations")
-        );
-
-        var bug_button = new Gtk.Button.with_label (_("Send Feedback")) {
-            halign = END,
-            hexpand = true
-        };
-
-        packages = new Gtk.StringList (null);
-
-        updates_image = new Gtk.Image () {
-            icon_size = LARGE
-        };
-
-        updates_title = new Gtk.Label (null) {
-            hexpand = true,
-            margin_end = 6,
-            xalign = 0
-        };
-
-        updates_description = new Gtk.Label (null) {
-            xalign = 0
-        };
-        updates_description.add_css_class (Granite.STYLE_CLASS_SMALL_LABEL);
-        updates_description.add_css_class (Granite.STYLE_CLASS_DIM_LABEL);
-
-        var update_button = new Gtk.Button.with_label (_("Download"));
-        update_button.add_css_class (Granite.STYLE_CLASS_SUGGESTED_ACTION);
-
-        var cancel_button = new Gtk.Button.with_label (_("Cancel"));
-
-        var refresh_button = new Gtk.Button.with_label (_("Refresh"));
-
-        button_stack = new Gtk.Stack () {
-            hhomogeneous = false,
-            transition_type = CROSSFADE,
-            valign = CENTER
-        };
-        button_stack.add_named (new Gtk.Grid (), "blank");
-        button_stack.add_named (update_button, "update");
-        button_stack.add_named (cancel_button, "cancel");
-        button_stack.add_named (refresh_button, "refresh");
-
-        var details_button = new Gtk.Button.with_label (_("Learn Moreâ€¦")) {
-            halign = START,
-            has_frame = false,
-            margin_top = 6
-        };
-        details_button.add_css_class ("link");
-        details_button.add_css_class (Granite.STYLE_CLASS_SMALL_LABEL);
-
-        details_button_revealer = new Gtk.Revealer () {
-            child = details_button
-        };
-
-        var updates_grid = new Gtk.Grid () {
-            column_spacing = 6,
-            margin_top = 6,
-            margin_end = 6,
-            margin_bottom = 6,
-            margin_start = 6
-        };
-        updates_grid.attach (updates_image, 0, 0, 1, 2);
-        updates_grid.attach (updates_title, 1, 0);
-        updates_grid.attach (updates_description, 1, 1);
-        updates_grid.attach (button_stack, 2, 0, 1, 2);
-        updates_grid.attach (details_button_revealer, 1, 2, 2, 1);
-
-        var software_updates_frame = new Gtk.Frame () {
-            hexpand = true,
-            child = updates_grid,
-            margin_top = 6,
-            margin_bottom = 6,
-            margin_start = 6,
-            margin_end = 6
-        };
-        software_updates_frame.add_css_class (Granite.STYLE_CLASS_PILL_BUTTON_FRAME);
-
-        software_grid = new Gtk.Grid () {
-            column_spacing = 6,
-            margin_top = 12,
-            margin_bottom = 12,
-            margin_start = 6,
-            margin_end = 6
-        };
-        software_grid.attach (logo_overlay, 0, 0, 2, 1);
-        software_grid.attach (title, 0, 1, 2, 1);
-        software_grid.attach (kernel_version_label, 0, 2, 2, 1);
-        software_grid.attach (website_label, 0, 3, 1, 1);
-        software_grid.attach (help_button, 0, 4, 1, 1);
-        software_grid.attach (translate_button, 0, 5, 1, 1);
-        software_grid.attach (bug_button, 1, 4, 1, 1);
-        software_grid.attach (software_updates_frame, 0, 6, 2, 1);
-
-        this.add (software_grid);
-
-        try {
-            update_proxy = Bus.get_proxy_sync (BusType.SESSION, "io.elementary.settings_daemon", "/io/elementary/settings_daemon/system_update") as SystemUpdate;
-        } catch (Error e) {
-            warning ("Unable to connect to system update service: %s", e.message);
-            return;
-        }
-
-        update_proxy.notify["state"].connect (() => {
-            update_current_state ();
-        });
-
-        update_current_state ();
-    }
-
-    private async void update_current_state () {
-        try {
-            current_state = yield update_proxy!.get_current_state ();
-        } catch (Error e) {
-            warning ("Unable to retrieve current state: %s", e.message);
-            current_state = null;
-        }
-
-        if (current_state == null) {
-            return;
-        }
-
-        if (current_state.state == SystemUpdate.State.UP_TO_DATE) {
-            updates_image.icon_name = "document-save-symbolic";
-            updates_title.text = _("Software is up to date");
-            updates_description.text = null;
-            button_stack.set_visible_child_name ("blank");
-            details_button_revealer.reveal_child = false;
-        } else if (current_state.state == SystemUpdate.State.CHECKING) {
-            updates_image.icon_name = "emblem-synchronizing-symbolic";
-            updates_title.text = _("Checking for updatesâ€¦");
-            updates_description.text = null;
-            button_stack.set_visible_child_name ("cancel");
-            details_button_revealer.reveal_child = false;
-        } else if (current_state.state == SystemUpdate.State.AVAILABLE) {
-            updates_image.icon_name = "software-update-urgent-symbolic";
-            updates_title.text = _("Updates available");
-            updates_description.text = current_state.message;
-            button_stack.set_visible_child_name ("update");
-            details_button_revealer.reveal_child = true;
-        } else if (current_state.state == SystemUpdate.State.DOWNLOADING) {
-            updates_image.icon_name = "emblem-synchronizing-symbolic";
-            updates_title.text = _("Downloading updatesâ€¦");
-            updates_description.text = current_state.message;
-            button_stack.set_visible_child_name ("cancel");
-            details_button_revealer.reveal_child = false;
-        } else if (current_state.state == SystemUpdate.State.RESTART_REQUIRED) {
-            updates_image.icon_name = "system-restart-symbolic";
-            updates_title.text = _("Restart required to finish updates");
-            updates_description.text = current_state.message;
-            button_stack.set_visible_child_name ("blank");
-            details_button_revealer.reveal_child = true;
-        } else if (current_state.state == SystemUpdate.State.ERROR) {
-            updates_image.icon_name = "dialog-error-symbolic";
-            updates_title.text = _("Error checking for updates");
-            updates_description.text = current_state.message;
-            button_stack.set_visible_child_name ("refresh");
-            details_button_revealer.reveal_child = true;
-        }
-    }
+        this.add (new Gtk.Label ("Operating System Information"));
     }
-
-    private void show_details_dialog () {
-        if (update_proxy == null) {
-            return;
-        }
-
-        var dialog = new UpdateDetailsDialog (packages, update_proxy);
-        dialog.present ();
-    }
-
-    private async void refresh_updates () {
-        if (update_proxy == null) {
-            return;
-        }
-
-        button_stack.set_visible_child_name ("blank");
-        try {
-            yield update_proxy.check_for_updates (true, true);
-        } catch (Error e) {
-            warning ("Error checking for updates: %s", e.message);
-            return;
-        }
-    }
 }
diff --git a/src/Widgets/UpdateDetailsDialog.vala b/src/Widgets/UpdateDetailsDialog.vala
deleted file mode 100644
index a426de84b..000000000
--- a/src/Widgets/UpdateDetailsDialog.vala
+++ /dev/null
@@ -1,72 +0,0 @@
-public class About.UpdateDetailsDialog : Gtk.Window {
-    public UpdateDetailsDialog (Gtk.StringList packages, SystemUpdate proxy) {
-        title = _("Update Details");
-        set_default_size (640, 480);
-        set_transient_for (null);
-        set_modal (true);
-        destroy_with_parent = true;
-
-        var box = new Gtk.Box (Gtk.Orientation.VERTICAL, 0);
-        box.margin = 12;
-
-        var packages_list = new Gtk.ListBox ();
-        packages_list.set_selection_mode (Gtk.SelectionMode.NONE);
-
-        packages.foreach ((item) => {
-            packages_list.append (new Gtk.Label (item));
-        });
-
-        box.append (packages_list);
-
-        var button_box = new Gtk.Box (Gtk.Orientation.HORIZONTAL, 6) {
-            hexpand = true,
-            halign = Gtk.Align.END,
-            margin_top = 12
-        };
-
-        var close_button = new Gtk.Button.with_label (_("Close"));
-        close_button.add_css_class (Granite.STYLE_CLASS_SUGGESTED_ACTION);
-        close_button.clicked.connect (() => {
-            close ();
-        });
-
-        var install_button = new Gtk.Button.with_label (_("Install"));
-        install_button.add_css_class (Granite.STYLE_CLASS_DESTRUCTIVE_ACTION);
-        install_button.clicked.connect (() => {
-            proxy.update.begin ((obj, res) => {
-                try {
-                    proxy.update.end (res);
-                } catch (Error e) {
-                    warning ("Error installing updates: %s", e.message);
-                }
-            });
-            close ();
-        });
-
-        button_box.append (close_button);
-        button_box.append (install_button);
-
-        box.append (button_box);
-
-        var scrolled_window = new Gtk.ScrolledWindow ();
-        scrolled_window.set_child (box);
-        scrolled_window.set_policy (Gtk.PolicyType.AUTOMATIC, Gtk.PolicyType.AUTOMATIC);
-        set_child (scrolled_window);
-    }
-}
diff --git a/src/meson.build b/src/meson.build
index 8a5377c47..e5e3c735d 100644
--- a/src/meson.build
+++ b/src/meson.build
@@ -76,10 +76,6 @@ executable('about',
     'Views/HardwareView.vala',
     'Views/OperatingSystemView.vala',
     'Widgets/FirmwareUpdateRow.vala',
-    'Widgets/UpdateDetailsDialog.vala',
-    'DBus/SystemUpdate.vala',
-
-    install : true,
 )
 
 install_data(
-- 
2.34.1

From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Danielle=20For=C3=A9?= <danielle@elementary.io>
Date: Tue, 30 Jan 2024 15:49:04 -0800
Subject: [PATCH] Revert "OperatingSystemView: use urgent icon if updates contain security (#292)"

This reverts commit 023f86b9e97c192d4f649ba788d660fb5e77582c.

---
 src/DBus/SystemUpdate.vala         | 1 -
 src/Views/OperatingSystemView.vala | 4 ----
 src/meson.build                    | 1 -
 3 files changed, 0 insertions(+), 6 deletions(-)

diff --git a/src/DBus/SystemUpdate.vala b/src/DBus/SystemUpdate.vala
index 5e9a16ca..4929a5c2 100644
--- a/src/DBus/SystemUpdate.vala
+++ b/src/DBus/SystemUpdate.vala
@@ -17,7 +17,6 @@ public interface SystemUpdate : Object {
     public struct UpdateDetails {
         string[] packages;
         int size;
-        Pk.Info[] info;
     }
 
     public signal void state_changed ();
diff --git a/src/Views/OperatingSystemView.vala b/src/Views/OperatingSystemView.vala
index ebfd28eb..b94ae18b 100644
--- a/src/Views/OperatingSystemView.vala
+++ b/src/Views/OperatingSystemView.vala
@@ -373,10 +373,6 @@ public class About.OperatingSystemView : Gtk.Box {
                         details.packages.length
                     ).printf (details.packages.length);
 
-                    if (Pk.Info.SECURITY in details.info) {
-                        updates_image.icon_name = "software-update-urgent";
-                    }
-
                     packages.splice (0, packages.get_n_items (), details.packages);
                 } catch (Error e) {
                     updates_description.label = _("Unable to determine number of updates");
diff --git a/src/meson.build b/src/meson.build
index bc8da285..5c4edf49 100644
--- a/src/meson.build
+++ b/src/meson.build
@@ -38,7 +38,6 @@ shared_module(
         dependency('gtk4'),
         dependency('libadwaita-1'),
         dependency('libgtop-2.0'),
-        dependency('packagekit-glib2'),
         dependency('gudev-1.0'),
         dependency('udisks2'),
         appstream_dep,
"""
