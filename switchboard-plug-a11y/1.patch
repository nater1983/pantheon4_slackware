From 08db4b696128a6bf809da3403a818834fcd62b02 Mon Sep 17 00:00:00 2001
From: Bobby Rong <931189261@qq.com>
Date: Mon, 16 Aug 2021 15:40:18 +0800
Subject: [PATCH] l10n: Correctly setup the locales (#79)

---
 meson.build        | 9 +++++++++
 src/Config.vala.in | 2 ++
 src/Plug.vala      | 3 +++
 src/meson.build    | 1 +
 4 files changed, 15 insertions(+)
 create mode 100644 src/Config.vala.in

diff --git a/meson.build b/meson.build
index 76e558a..79d7364 100644
--- a/meson.build
+++ b/meson.build
@@ -17,6 +17,15 @@ add_project_arguments(
     language:'c'
 )
 
+config_data = configuration_data()
+config_data.set_quoted('LOCALEDIR', join_paths(get_option('prefix'), get_option('localedir')))
+config_data.set_quoted('GETTEXT_PACKAGE', meson.project_name() + '-plug')
+config_file = configure_file(
+    input: 'src/Config.vala.in',
+    output: '@BASENAME@',
+    configuration: config_data
+)
+
 subdir('data')
 subdir('src')
 subdir('po')
diff --git a/src/Config.vala.in b/src/Config.vala.in
new file mode 100644
index 0000000..af62dcf
--- /dev/null
+++ b/src/Config.vala.in
@@ -0,0 +1,2 @@
+public const string GETTEXT_PACKAGE = @GETTEXT_PACKAGE@;
+public const string LOCALEDIR = @LOCALEDIR@;
diff --git a/src/Plug.vala b/src/Plug.vala
index bf72043..c6c7b2c 100644
--- a/src/Plug.vala
+++ b/src/Plug.vala
@@ -27,6 +27,9 @@ namespace Accessibility {
         public static GLib.Settings keyboard_settings;
 
         public Plug () {
+            GLib.Intl.bindtextdomain (GETTEXT_PACKAGE, LOCALEDIR);
+            GLib.Intl.bind_textdomain_codeset (GETTEXT_PACKAGE, "UTF-8");
+
             var settings = new Gee.TreeMap<string, string?> (null, null);
             settings.set ("universal-access", null);
 
diff --git a/src/meson.build b/src/meson.build
index 598a85d..2e97235 100644
--- a/src/meson.build
+++ b/src/meson.build
@@ -14,6 +14,7 @@ switchboard_plugsdir = switchboard_dep.get_pkgconfig_variable('plugsdir', define
 shared_module(
     meson.project_name(),
     plug_files,
+    config_file,
     dependencies: [
         dependency('glib-2.0'),
         dependency('gio-2.0'),
From 958983ec88fd16cc3482ab5f01cdd8e77e2c06b6 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Danielle=20For=C3=A9?= <danielle@elementary.io>
Date: Tue, 20 Sep 2022 11:15:28 -0700
Subject: [PATCH] Port to Gtk4 (#80)

* Port to Gtk4

* use rich-list

* Make settings box responsive

* Bump to switchboard-3

* Update main.yml

* Update CI

* Re-namespace

* Use Granite style constants
---

 README.md                                     | 10 +-
 ...11y.appdata.xml.in => a11y.appdata.xml.in} | 11 +--
 data/meson.build                              |  4 +-
 meson.build                                   |  6 +-
 po/POTFILES                                   |  1 -
 ...ug.pot => io.elementary.settings.a11y.pot} | 42 ++++-----
 src/Panes/Audio.vala                          | 15 +--
 src/Panes/Keyboard.vala                       | 20 ++--
 src/Panes/Typing.vala                         | 23 +++--
 src/Plug.vala                                 | 39 ++++----
 src/Widgets/Categories.vala                   | 73 ++++++++-------
 src/Widgets/Label.vala                        | 28 ------
 src/Widgets/SettingBox.vala                   | 93 +++++++++----------
 src/meson.build                               |  7 +-
 17 files changed, 187 insertions(+), 205 deletions(-)
 rename data/{io.elementary.switchboard.a11y.appdata.xml.in => a11y.appdata.xml.in} (82%)
 rename po/{accessibility-plug.pot => io.elementary.settings.a11y.pot} (76%)
 delete mode 100644 src/Widgets/Label.vala

diff --git a/README.md b/README.md
index ddee710..71a430e 100644
--- a/README.md
+++ b/README.md
@@ -1,4 +1,4 @@
-# Switchboard Universal Access Plug
+# Universal Access Settings
 [![Translation status](https://l10n.elementary.io/widgets/switchboard/-/switchboard-plug-a11y/svg-badge.svg)](https://l10n.elementary.io/engage/switchboard/?utm_source=widget)
 
 ![screenshot](data/screenshot-audio.png?raw=true)
@@ -7,9 +7,9 @@
 
 You'll need the following dependencies:
 
-* libswitchboard-2.0-dev
-* libgranite-dev
-* libgtk-3-dev
+* libswitchboard-3-dev
+* libgranite-7-dev
+* libgtk-4-dev
 * meson
 * valac (>= 0.22)
 
@@ -21,4 +21,4 @@ Run `meson` to configure the build environment and then `ninja` to build
 
 To install, use `ninja install`
 
-    sudo ninja install
+    ninja install
diff --git a/data/io.elementary.switchboard.a11y.appdata.xml.in b/data/a11y.appdata.xml.in
similarity index 82%
rename from data/io.elementary.switchboard.a11y.appdata.xml.in
rename to data/a11y.appdata.xml.in
index ca00980..9f16f9f 100644
--- a/data/io.elementary.switchboard.a11y.appdata.xml.in
+++ b/data/a11y.appdata.xml.in
@@ -1,11 +1,10 @@
 <?xml version="1.0" encoding="UTF-8"?>
 <component type="addon">
-  <id>io.elementary.switchboard.a11y</id>
-  <extends>io.elementary.switchboard</extends>
+  <id>io.elementary.settings.a11y</id>
+  <extends>io.elementary.settings</extends>
   <name>Universal Access Settings</name>
   <summary>Configure accessibility features</summary>
   <icon type="stock">preferences-desktop-accessibility</icon>
-  <translation type="gettext">accessibility-plug</translation>
   <releases>
     <release version="2.3.0" date="2021-07-16" urgency="low">
       <description>
@@ -30,13 +29,13 @@
   </releases>
   <screenshots>
     <screenshot type="default">
-      <image>https://raw.githubusercontent.com/elementary/switchboard-plug-a11y/master/data/screenshot-audio.png</image>
+      <image>https://raw.githubusercontent.com/elementary/switchboard-plug-a11y/main/data/screenshot-audio.png</image>
     </screenshot>
     <screenshot>
-      <image>https://raw.githubusercontent.com/elementary/switchboard-plug-a11y/master/data/screenshot-typing.png</image>
+      <image>https://raw.githubusercontent.com/elementary/switchboard-plug-a11y/main/data/screenshot-typing.png</image>
     </screenshot>
     <screenshot>
-      <image>https://raw.githubusercontent.com/elementary/switchboard-plug-a11y/master/data/screenshot-keyboard.png</image>
+      <image>https://raw.githubusercontent.com/elementary/switchboard-plug-a11y/main/data/screenshot-keyboard.png</image>
     </screenshot>
   </screenshots>
   <url type="homepage">https://elementary.io</url>
diff --git a/data/meson.build b/data/meson.build
index 30b96e5..136dd6f 100644
--- a/data/meson.build
+++ b/data/meson.build
@@ -1,6 +1,6 @@
 i18n.merge_file(
-    input: 'io.elementary.switchboard.a11y.appdata.xml.in',
-    output: 'io.elementary.switchboard.a11y.appdata.xml',
+    input: 'a11y.appdata.xml.in',
+    output: 'io.elementary.settings.a11y.appdata.xml',
     po_dir: join_paths(meson.source_root (), 'po', 'extra'),
     install_dir: join_paths(datadir, 'metainfo'),
     install: true
diff --git a/meson.build b/meson.build
index 79d7364..134e00c 100644
--- a/meson.build
+++ b/meson.build
@@ -1,10 +1,10 @@
 project(
-    'accessibility',
+    'a11y',
     'vala', 'c',
     version: '2.3.0'
 )
 
-gettext_name = meson.project_name() + '-plug'
+gettext_name = 'io.elementary.settings.' + meson.project_name()
 gnome = import('gnome')
 i18n = import('i18n')
 
@@ -19,7 +19,7 @@ add_project_arguments(
 
 config_data = configuration_data()
 config_data.set_quoted('LOCALEDIR', join_paths(get_option('prefix'), get_option('localedir')))
-config_data.set_quoted('GETTEXT_PACKAGE', meson.project_name() + '-plug')
+config_data.set_quoted('GETTEXT_PACKAGE', gettext_name)
 config_file = configure_file(
     input: 'src/Config.vala.in',
     output: '@BASENAME@',
diff --git a/po/POTFILES b/po/POTFILES
index d90b9cf..93a8c64 100644
--- a/po/POTFILES
+++ b/po/POTFILES
@@ -3,5 +3,4 @@ src/Panes/Audio.vala
 src/Panes/Keyboard.vala
 src/Panes/Typing.vala
 src/Widgets/Categories.vala
-src/Widgets/Label.vala
 src/Widgets/SettingBox.vala
diff --git a/po/accessibility-plug.pot b/po/io.elementary.settings.a11y.pot
similarity index 76%
rename from po/accessibility-plug.pot
rename to po/io.elementary.settings.a11y.pot
index 9da4865..4c72169 100644
--- a/po/accessibility-plug.pot
+++ b/po/io.elementary.settings.a11y.pot
@@ -1,14 +1,14 @@
 # SOME DESCRIPTIVE TITLE.
 # Copyright (C) YEAR THE PACKAGE'S COPYRIGHT HOLDER
-# This file is distributed under the same license as the accessibility-plug package.
+# This file is distributed under the same license as the io.elementary.settings.a11y package.
 # FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
 #
 #, fuzzy
 msgid ""
 msgstr ""
-"Project-Id-Version: accessibility-plug\n"
+"Project-Id-Version: io.elementary.settings.a11y\n"
 "Report-Msgid-Bugs-To: \n"
-"POT-Creation-Date: 2021-07-16 17:55+0000\n"
+"POT-Creation-Date: 2022-09-20 11:03-0700\n"
 "PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
 "Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
 "Language-Team: LANGUAGE <LL@li.org>\n"
@@ -17,19 +17,19 @@ msgstr ""
 "Content-Type: text/plain; charset=UTF-8\n"
 "Content-Transfer-Encoding: 8bit\n"
 
-#: src/Plug.vala:35
+#: src/Plug.vala:38
 msgid "Universal Access"
 msgstr ""
 
-#: src/Plug.vala:36
+#: src/Plug.vala:39
 msgid "Configure accessibility features"
 msgstr ""
 
-#: src/Plug.vala:48
+#: src/Plug.vala:51
 msgid "More accessibility features can be found throughout System Settings."
 msgstr ""
 
-#: src/Plug.vala:49
+#: src/Plug.vala:52
 msgid ""
 "Check the relevant settings pages or search from the All Settings screen."
 msgstr ""
@@ -47,7 +47,7 @@ msgstr ""
 msgid "Audio"
 msgstr ""
 
-#: src/Plug.vala:140 src/Widgets/Categories.vala:46
+#: src/Plug.vala:140 src/Widgets/Categories.vala:52
 msgid "Hearing"
 msgstr ""
 
@@ -78,7 +78,7 @@ msgstr ""
 msgid "Typing"
 msgstr ""
 
-#: src/Plug.vala:147 src/Panes/Typing.vala:44
+#: src/Plug.vala:147 src/Panes/Typing.vala:48
 msgid "On-screen keyboard"
 msgstr ""
 
@@ -86,20 +86,20 @@ msgstr ""
 msgid "Typing Delays"
 msgstr ""
 
-#: src/Plug.vala:149 src/Panes/Typing.vala:47
+#: src/Plug.vala:149 src/Panes/Typing.vala:51
 msgid "Delay between key presses (slow keys)"
 msgstr ""
 
-#: src/Plug.vala:150 src/Panes/Typing.vala:48
+#: src/Plug.vala:150 src/Panes/Typing.vala:52
 msgid "Beep when a key is pressed"
 msgstr ""
 
-#: src/Plug.vala:151 src/Panes/Typing.vala:49
+#: src/Plug.vala:151 src/Panes/Typing.vala:53
 msgid "Beep when a key is accepted"
 msgstr ""
 
-#: src/Plug.vala:152 src/Plug.vala:156 src/Panes/Typing.vala:50
-#: src/Panes/Typing.vala:55
+#: src/Plug.vala:152 src/Plug.vala:156 src/Panes/Typing.vala:54
+#: src/Panes/Typing.vala:59
 msgid "Beep when a key is rejected"
 msgstr ""
 
@@ -111,7 +111,7 @@ msgstr ""
 msgid "Fast Typing"
 msgstr ""
 
-#: src/Plug.vala:155 src/Panes/Typing.vala:54
+#: src/Plug.vala:155 src/Panes/Typing.vala:58
 msgid "Ignore fast duplicate keypresses (bounce keys)"
 msgstr ""
 
@@ -124,15 +124,15 @@ msgstr ""
 msgid "Keyboard"
 msgstr ""
 
-#: src/Plug.vala:159 src/Panes/Keyboard.vala:37
+#: src/Plug.vala:159 src/Panes/Keyboard.vala:42
 msgid "Beep when a lock key is pressed"
 msgstr ""
 
-#: src/Plug.vala:160 src/Panes/Keyboard.vala:40
+#: src/Plug.vala:160 src/Panes/Keyboard.vala:45
 msgid "Use modifier keys in sequence (sticky keys)"
 msgstr ""
 
-#: src/Plug.vala:161 src/Panes/Keyboard.vala:41
+#: src/Plug.vala:161 src/Panes/Keyboard.vala:46
 msgid "Beep when a modifier key is pressed"
 msgstr ""
 
@@ -160,7 +160,7 @@ msgstr ""
 msgid "Modifier Keys"
 msgstr ""
 
-#: src/Panes/Keyboard.vala:33 src/Panes/Typing.vala:37
+#: src/Panes/Keyboard.vala:34 src/Panes/Typing.vala:37
 msgid "Keyboard settings…"
 msgstr ""
 
@@ -168,10 +168,10 @@ msgstr ""
 msgid "On-screen keyboard settings…"
 msgstr ""
 
-#: src/Panes/Typing.vala:51 src/Panes/Typing.vala:56
+#: src/Panes/Typing.vala:55 src/Panes/Typing.vala:60
 msgid "Delay length"
 msgstr ""
 
-#: src/Widgets/Categories.vala:48
+#: src/Widgets/Categories.vala:54
 msgid "Interaction"
 msgstr ""
diff --git a/src/Panes/Audio.vala b/src/Panes/Audio.vala
index a74e79d..3ca98e0 100644
--- a/src/Panes/Audio.vala
+++ b/src/Panes/Audio.vala
@@ -55,13 +55,16 @@ public class Accessibility.Panes.Audio : Categories.Pane {
         var shortcut_label = new Gtk.Label (screenreader_shortcut_keys);
         reader_box.add_widget (_("Keyboard shortcut"), shortcut_label);
 
-        var audio_settings = new Accessibility.Widgets.LinkLabel (_("Sound settings…"), "settings://sound");
-        audio_settings.vexpand = true;
+        var audio_settings = new Gtk.LinkButton.with_label ("settings://sound", _("Sound settings…")) {
+            halign = Gtk.Align.END,
+            valign = Gtk.Align.END,
+            hexpand = true,
+            vexpand = true
+        };
 
-        grid.add (reader_label);
-        grid.add (reader_box);
-        grid.add (audio_settings);
-        grid.show_all ();
+        box.append (reader_label);
+        box.append (reader_box);
+        box.append (audio_settings);
 
         Accessibility.Plug.applications_settings.bind ("screen-reader-enabled", read_items, "active", SettingsBindFlags.DEFAULT);
 
diff --git a/src/Panes/Keyboard.vala b/src/Panes/Keyboard.vala
index e0ac255..0deb80f 100644
--- a/src/Panes/Keyboard.vala
+++ b/src/Panes/Keyboard.vala
@@ -30,8 +30,13 @@ public class Accessibility.Panes.Keyboard : Categories.Pane {
     construct {
         var lock_label = new Granite.HeaderLabel (_("Lock Keys"));
         var modifier_label = new Granite.HeaderLabel (_("Modifier Keys"));
-        var kb_settings_label = new Accessibility.Widgets.LinkLabel (_("Keyboard settings…"), "settings://input/keyboard/behavior");
-        kb_settings_label.vexpand = true;
+
+        var kb_settings_label = new Gtk.LinkButton.with_label ("settings://input/keyboard/behavior", _("Keyboard settings…")) {
+            halign = Gtk.Align.END,
+            valign = Gtk.Align.END,
+            hexpand = true,
+            vexpand = true
+        };
 
         var lock_box = new Accessibility.Widgets.SettingsBox ();
         var lk_beep = lock_box.add_switch (_("Beep when a lock key is pressed"));
@@ -40,12 +45,11 @@ public class Accessibility.Panes.Keyboard : Categories.Pane {
         var mk_enable = modifier_box.add_switch (_("Use modifier keys in sequence (sticky keys)"));
         var mk_beep = modifier_box.add_switch (_("Beep when a modifier key is pressed"));
 
-        grid.add (lock_label);
-        grid.add (lock_box);
-        grid.add (modifier_label);
-        grid.add (modifier_box);
-        grid.add (kb_settings_label);
-        grid.show_all ();
+        box.append (lock_label);
+        box.append (lock_box);
+        box.append (modifier_label);
+        box.append (modifier_box);
+        box.append (kb_settings_label);
 
         Accessibility.Plug.keyboard_settings.bind ("togglekeys-enable", lk_beep, "active", SettingsBindFlags.DEFAULT);
         Accessibility.Plug.keyboard_settings.bind ("stickykeys-enable", mk_enable, "active", SettingsBindFlags.DEFAULT);
diff --git a/src/Panes/Typing.vala b/src/Panes/Typing.vala
index 2aafd35..e827d68 100644
--- a/src/Panes/Typing.vala
+++ b/src/Panes/Typing.vala
@@ -34,8 +34,12 @@ public class Accessibility.Panes.Typing : Categories.Pane {
         var onboard_settings_label = new Gtk.LinkButton.with_label ("", _("On-screen keyboard settings…"));
         onboard_settings_label.halign = Gtk.Align.END;
 
-        var kb_settings_label = new Accessibility.Widgets.LinkLabel (_("Keyboard settings…"), "settings://input/keyboard/behavior");
-        kb_settings_label.vexpand = true;
+        var kb_settings_label = new Gtk.LinkButton.with_label ("settings://input/keyboard/behavior", _("Keyboard settings…")) {
+            halign = Gtk.Align.END,
+            valign = Gtk.Align.END,
+            hexpand = true,
+            vexpand = true
+        };
 
         var sk_delay_adjustment = new Gtk.Adjustment (0, 0, 2001, 1, 1, 1);
         var bk_delay_adjustment = new Gtk.Adjustment (0, 0, 2001, 1, 1, 1);
@@ -55,14 +59,13 @@ public class Accessibility.Panes.Typing : Categories.Pane {
         var bk_rejected = typing_box.add_switch (_("Beep when a key is rejected"));
         var bk_delay = typing_box.add_scale (_("Delay length"), bk_delay_adjustment);
 
-        grid.add (screen_box);
-        grid.add (onboard_settings_label);
-        grid.add (delay_label);
-        grid.add (delay_box);
-        grid.add (typing_label);
-        grid.add (typing_box);
-        grid.add (kb_settings_label);
-        grid.show_all ();
+        box.append (screen_box);
+        box.append (onboard_settings_label);
+        box.append (delay_label);
+        box.append (delay_box);
+        box.append (typing_label);
+        box.append (typing_box);
+        box.append (kb_settings_label);
 
         Accessibility.Plug.applications_settings.bind ("screen-keyboard-enabled", screen_keyboard, "active", SettingsBindFlags.DEFAULT);
 
diff --git a/src/Plug.vala b/src/Plug.vala
index c6c7b2c..8c8eedc 100644
--- a/src/Plug.vala
+++ b/src/Plug.vala
@@ -20,7 +20,7 @@
  */
 namespace Accessibility {
     public class Plug : Switchboard.Plug {
-        Gtk.Grid grid;
+        private Gtk.Box box;
         Accessibility.Categories categories;
 
         public static GLib.Settings applications_settings;
@@ -34,7 +34,7 @@ namespace Accessibility {
             settings.set ("universal-access", null);
 
             Object (category: Category.SYSTEM,
-                    code_name: "io.elementary.switchboard.a11y",
+                    code_name: "io.elementary.settings.a11y",
                     display_name: _("Universal Access"),
                     description: _("Configure accessibility features"),
                     icon: "preferences-desktop-accessibility",
@@ -47,7 +47,7 @@ namespace Accessibility {
         }
 
         public override Gtk.Widget get_widget () {
-            if (grid == null) {
+            if (box == null) {
                 var info_title = _("More accessibility features can be found throughout System Settings.");
                 var info_details = _("Check the relevant settings pages or search from the All Settings screen.");
 
@@ -58,10 +58,7 @@ namespace Accessibility {
                 };
 
                 var infobar = new Gtk.InfoBar ();
-
-                // Need to pack_start for proper spacing and margins
-                var infobar_box = (Gtk.Box) infobar.get_content_area ();
-                infobar_box.pack_start (info_label);
+                infobar.add_child (info_label);
 
                 var stack = new Gtk.Stack ();
 
@@ -73,12 +70,14 @@ namespace Accessibility {
                 };
 
                 var indicator_switch = new Gtk.Switch () {
-                    margin = 6,
-                    margin_end = 3
+                    margin_top = 6,
+                    margin_end = 3,
+                    margin_bottom = 6,
+                    margin_start = 6
                 };
 
                 var footer = new Gtk.ActionBar ();
-                footer.get_style_context ().add_class (Gtk.STYLE_CLASS_INLINE_TOOLBAR);
+                footer.get_style_context ().add_class (Granite.STYLE_CLASS_FLAT);
                 footer.pack_start (indicator_label);
                 footer.pack_end (indicator_switch);
 
@@ -86,24 +85,22 @@ namespace Accessibility {
                 sidebar.attach (categories, 0, 0);
                 sidebar.attach (footer, 0, 1);
 
-                var paned = new Gtk.Paned (Gtk.Orientation.HORIZONTAL);
-                paned.pack1 (sidebar, false, false);
-                paned.add2 (stack);
-
-                grid = new Gtk.Grid () {
-                    orientation = Gtk.Orientation.VERTICAL
+                var paned = new Gtk.Paned (Gtk.Orientation.HORIZONTAL) {
+                    start_child = sidebar,
+                    resize_start_child = false,
+                    shrink_start_child = false,
+                    end_child = stack
                 };
 
-                grid.add (infobar);
-                grid.add (paned);
-
-                grid.show_all ();
+                box = new Gtk.Box (Gtk.Orientation.VERTICAL, 0);
+                box.append (infobar);
+                box.append (paned);
 
                 var panel_settings = new Settings ("io.elementary.desktop.wingpanel.a11y");
                 panel_settings.bind ("show-indicator", indicator_switch, "active", SettingsBindFlags.DEFAULT);
             }
 
-            return grid;
+            return box;
         }
 
         public override void shown () {
diff --git a/src/Widgets/Categories.vala b/src/Widgets/Categories.vala
index 18adcd9..a3f90bb 100644
--- a/src/Widgets/Categories.vala
+++ b/src/Widgets/Categories.vala
@@ -20,26 +20,32 @@
 * Authored by: Corentin Noël <corentin@elementary.io>
 */
 
-public class Accessibility.Categories : Gtk.ScrolledWindow {
+public class Accessibility.Categories : Gtk.Box {
     private Gtk.Stack stack;
     private Gtk.ListBox list_box;
 
     construct {
-        hscrollbar_policy = Gtk.PolicyType.NEVER;
         set_size_request (176, 10);
 
         var audio = new Panes.Audio ();
         var typing = new Panes.Typing ();
         var keyboard = new Panes.Keyboard ();
 
-        list_box = new Gtk.ListBox ();
-        list_box.expand = true;
+        list_box = new Gtk.ListBox () {
+            hexpand = true,
+            vexpand = true
+        };
 
-        list_box.add (audio);
-        list_box.add (typing);
-        list_box.add (keyboard);
+        list_box.append (audio);
+        list_box.append (typing);
+        list_box.append (keyboard);
 
-        add (list_box);
+        var scrolled = new Gtk.ScrolledWindow () {
+            hscrollbar_policy = Gtk.PolicyType.NEVER,
+            child = list_box
+        };
+
+        append (scrolled);
 
         list_box.set_header_func ((row, before) => {
             if (row == audio) {
@@ -57,7 +63,7 @@ public class Accessibility.Categories : Gtk.ScrolledWindow {
 
             if (page.added == false) {
                 page.added = true;
-                stack.add (page.pane);
+                stack.add_child (page.pane);
             }
 
             stack.set_visible_child (page.pane);
@@ -80,42 +86,47 @@ public class Accessibility.Categories : Gtk.ScrolledWindow {
     public class Pane : Gtk.ListBoxRow {
         public bool added = false;
         public Gtk.ScrolledWindow pane { public get; private set; }
-        public Gtk.Grid grid { public get; private set; }
         public string icon_name { get; construct; }
         public string label_string { get; construct; }
 
+        protected Gtk.Box box;
+
         public Pane (string label_string, string icon_name) {
             Object (label_string: label_string, icon_name: icon_name);
         }
 
         construct {
-            grid = new Gtk.Grid ();
-            grid.orientation = Gtk.Orientation.VERTICAL;
-            grid.margin = 12;
-            grid.margin_top = 24;
-            grid.row_spacing = 12;
-            grid.column_spacing = 0;
-            grid.expand = true;
-            grid.show ();
-
-            pane = new Gtk.ScrolledWindow (null, null);
-            pane.add (grid);
-            pane.show ();
+            box = new Gtk.Box (Gtk.Orientation.VERTICAL, 12) {
+                margin_top = 24,
+                margin_end = 12,
+                margin_bottom = 12,
+                margin_start = 12,
+                hexpand = true,
+                vexpand = true
+            };
+
+            pane = new Gtk.ScrolledWindow () {
+                child = box
+            };
 
             var label = new Gtk.Label (label_string);
             label.hexpand = true;
             label.halign = Gtk.Align.START;
 
-            var image = new Gtk.Image.from_icon_name (icon_name, Gtk.IconSize.DND);
+            var image = new Gtk.Image.from_icon_name (icon_name) {
+                pixel_size = 32
+            };
+
+            var row_box = new Gtk.Box (Gtk.Orientation.HORIZONTAL, 6) {
+                margin_top = 3,
+                margin_end = 3,
+                margin_bottom = 3,
+                margin_start = 12
+            };
+            row_box.append (image);
+            row_box.append (label);
 
-            var rowgrid = new Gtk.Grid ();
-            rowgrid.orientation = Gtk.Orientation.HORIZONTAL;
-            rowgrid.column_spacing = 6;
-            rowgrid.margin = 3;
-            rowgrid.margin_start = 12;
-            rowgrid.add (image);
-            rowgrid.add (label);
-            add (rowgrid);
+            child = row_box;
         }
     }
 }
diff --git a/src/Widgets/Label.vala b/src/Widgets/Label.vala
deleted file mode 100644
index b7281d0..0000000
--- a/src/Widgets/Label.vala
+++ /dev/null
@@ -1,28 +0,0 @@
-/*
-* Copyright (c) 2015-2016 elementary LLC. (https://launchpad.net/switchboardswitchboard-plug-a11y)
-*
-* This program is free software; you can redistribute it and/or
-* modify it under the terms of the GNU General Public
-* License as published by the Free Software Foundation; either
-* version 3 of the License, or (at your option) any later version.
-*
-* This program is distributed in the hope that it will be useful,
-* but WITHOUT ANY WARRANTY; without even the implied warranty of
-* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
-* General Public License for more details.
-*
-* You should have received a copy of the GNU General Public
-* License along with this program; if not, write to the
-* Free Software Foundation, Inc., 51 Franklin Street - Fifth Floor,
-* Boston, MA 02110-1301, USA.
-*/
-
-public class Accessibility.Widgets.LinkLabel : Gtk.LinkButton {
-    public LinkLabel (string text, string _uri) {
-        label = text;
-        halign = Gtk.Align.END;
-        valign = Gtk.Align.END;
-        hexpand = true;
-        uri = _uri;
-    }
-}
diff --git a/src/Widgets/SettingBox.vala b/src/Widgets/SettingBox.vala
index 75c6127..f9932dd 100644
--- a/src/Widgets/SettingBox.vala
+++ b/src/Widgets/SettingBox.vala
@@ -17,56 +17,60 @@
 * Boston, MA 02110-1301, USA.
 */
 
-public class Accessibility.Widgets.SettingsBox : Gtk.Frame {
+public class Accessibility.Widgets.SettingsBox : Gtk.Box {
     private Gtk.ListBox list_box;
-    private bool has_childen = false;
 
     construct {
-        list_box = new Gtk.ListBox ();
-        this.add (list_box);
+        list_box = new Gtk.ListBox () {
+            hexpand = true,
+            show_separators = true
+        };
+        list_box.add_css_class (Granite.STYLE_CLASS_RICH_LIST);
+        list_box.add_css_class (Granite.STYLE_CLASS_FRAME);
+
+        append (list_box);
     }
 
     public void add_widget (string title, Gtk.Widget widget) {
-        has_childen = true;
-        widget.margin_end = 6;
+        var settings_box = new EmptyBox (title);
 
-        var settings_box = new EmptyBox (title, has_childen);
-        settings_box.grid.add (widget);
+        widget.halign = Gtk.Align.END;
+        widget.hexpand = true;
+
+        settings_box.box.append (widget);
         bind_sensitivity (widget, settings_box);
 
-        list_box.add (settings_box);
-        show_all ();
+        list_box.append (settings_box);
     }
 
     public Gtk.Scale add_scale (string title, Gtk.Adjustment adjustment) {
-        var scale = new Gtk.Scale (Gtk.Orientation.HORIZONTAL, adjustment);
-        scale.margin_end = 6;
-        scale.width_request = 250;
+        var scale = new Gtk.Scale (Gtk.Orientation.HORIZONTAL, adjustment) {
+            hexpand = true
+        };
         scale.draw_value = false;
 
-        var settings_box = new EmptyBox (title, has_childen);
-        settings_box.grid.add (scale);
+        var settings_box = new EmptyBox (title);
+        settings_box.box.append (scale);
         bind_sensitivity (scale, settings_box);
 
-        list_box.add (settings_box);
-        show_all ();
+        list_box.append (settings_box);
 
-        has_childen = true;
         return scale;
     }
 
     public Gtk.Switch add_switch (string title) {
-        var toggle = new Gtk.Switch ();
-        toggle.margin_end = 6;
-
-        var settings_box = new EmptyBox (title, has_childen);
-        settings_box.grid.add (toggle);
+        var toggle = new Gtk.Switch () {
+            halign = Gtk.Align.END,
+            hexpand = true,
+            valign = Gtk.Align.CENTER
+        };
+
+        var settings_box = new EmptyBox (title);
+        settings_box.box.append (toggle);
         bind_sensitivity (toggle, settings_box);
 
-        list_box.add (settings_box);
-        show_all ();
+        list_box.append (settings_box);
 
-        has_childen = true;
         return toggle;
     }
 
@@ -75,36 +79,23 @@ public class Accessibility.Widgets.SettingsBox : Gtk.Frame {
     }
 
     public class EmptyBox : Gtk.ListBoxRow {
-        public Gtk.Grid grid;
+        public Gtk.Box box;
         public Gtk.Label label;
 
-        public EmptyBox (string title, bool add_separator) {
+        public EmptyBox (string title) {
             activatable = false;
             selectable = false;
 
-            label = new Gtk.Label (title);
-            label.hexpand = true;
-            label.halign = Gtk.Align.START;
-            label.margin = 8;
-
-            grid = new Gtk.Grid ();
-            grid.hexpand = true;
-            grid.halign = Gtk.Align.END;
-            grid.margin_end = 4;
-            grid.margin_top = 8;
-            grid.margin_bottom = 8;
-
-            var main_grid = new Gtk.Grid ();
-            main_grid.attach (label, 0, 1, 1, 1);
-            main_grid.attach (grid, 1, 1, 1, 1);
-            add (main_grid);
-
-            if (add_separator) {
-                var separator = new Gtk.Separator (Gtk.Orientation.HORIZONTAL);
-                main_grid.attach (separator, 0, 0, 2, 1);
-            }
-
-            show_all ();
+            label = new Gtk.Label (title) {
+                wrap = true
+            };
+
+            box = new Gtk.Box (Gtk.Orientation.HORIZONTAL, 12) {
+                valign = Gtk.Align.CENTER
+            };
+            box.append (label);
+
+            child = box;
         }
     }
 }
diff --git a/src/meson.build b/src/meson.build
index 2e97235..6b2131f 100644
--- a/src/meson.build
+++ b/src/meson.build
@@ -1,14 +1,13 @@
 plug_files = files(
     'Plug.vala',
     'Widgets/SettingBox.vala',
-    'Widgets/Label.vala',
     'Widgets/Categories.vala',
     'Panes/Typing.vala',
     'Panes/Keyboard.vala',
     'Panes/Audio.vala'
 )
 
-switchboard_dep = dependency('switchboard-2.0')
+switchboard_dep = dependency('switchboard-3')
 switchboard_plugsdir = switchboard_dep.get_pkgconfig_variable('plugsdir', define_variable: ['libdir', libdir])
 
 shared_module(
@@ -19,8 +18,8 @@ shared_module(
         dependency('glib-2.0'),
         dependency('gio-2.0'),
         dependency('gobject-2.0'),
-        dependency('granite'),
-        dependency('gtk+-3.0'),
+        dependency('granite-7'),
+        dependency('gtk4'),
         switchboard_dep
     ],
     install: true,
